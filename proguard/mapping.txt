android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.e:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> a
    int getTheme() -> b
    void onAttach(android.app.Activity) -> a
    void onDetach() -> c
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> d
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> e
    void onDestroyView() -> f
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> h
    android.support.v4.app.FragmentActivity getActivity() -> i
    android.content.res.Resources getResources() -> j
    java.lang.String getString(int) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> k
    android.support.v4.app.FragmentManager getChildFragmentManager() -> l
    android.support.v4.app.Fragment getParentFragment() -> m
    boolean isDetached() -> n
    void onHiddenChanged(boolean) -> b
    android.support.v4.app.LoaderManager getLoaderManager() -> o
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> p
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> d
    void onResume() -> q
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> r
    void onStop() -> e
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> f
    void onDestroy() -> s
    void initState() -> t
    void onDetach() -> c
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> u
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> v
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> w
    void performResume() -> x
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> y
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> z
    void performStop() -> A
    void performReallyStop() -> B
    void performDestroyView() -> C
    void performDestroy() -> D
android.support.v4.app.Fragment$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.g:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.i:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> d
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.p:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> d
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> e
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> u
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> f
    void reportBackStackChanged() -> g
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> h
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> i
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> j
    void dispatchCreate() -> k
    void dispatchActivityCreated() -> l
    void dispatchStart() -> m
    void dispatchResume() -> n
    void dispatchPause() -> o
    void dispatchStop() -> p
    void dispatchReallyStop() -> q
    void dispatchDestroyView() -> r
    void dispatchDestroy() -> s
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> t
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.s:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.w:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.y:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.z:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.aa:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> f
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    android.widget.ListView getListView() -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> b
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ab:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ac:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ad:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ae:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.af:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ag:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ah:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ai:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.Loader -> android.support.v4.a.c:
    int mId -> f
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> g
    android.content.Context mContext -> h
    boolean mStarted -> i
    boolean mAbandoned -> j
    boolean mReset -> k
    boolean mContentChanged -> l
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> g
    boolean isAbandoned() -> h
    boolean isReset() -> i
    void startLoading() -> j
    void onStartLoading() -> k
    void forceLoad() -> l
    void onForceLoad() -> a
    void stopLoading() -> m
    void onStopLoading() -> n
    void abandon() -> o
    void onAbandon() -> p
    void reset() -> q
    void onReset() -> r
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.d:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.e:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.f:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.g:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.h:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.i:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.j:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.k:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.m:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.o:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.p:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.q:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> f
    int idealIntArraySize(int) -> g
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ac:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ad:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ae:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.af:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ag:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ah:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ai:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.aj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ak:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.al:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.am:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.an:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ao:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ap:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ar:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.google.analytics.tracking.android.AnalyticsClient -> com.google.a.a.a.a:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.a.a.a.b:
    android.content.ServiceConnection mConnection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener mOnConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener mOnConnectionFailedListener -> c
    android.content.Context mContext -> d
    com.google.android.gms.analytics.internal.IAnalyticsService mService -> e
    void connect() -> b
    void disconnect() -> c
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> f
    void checkConnected() -> d
    boolean isConnected() -> e
    void onServiceBound() -> g
    void onConnectionSuccess() -> h
    com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> a
    void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> a
    android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> b
    android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> c
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> com.google.a.a.a.c:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.a.a.a.d:
    void onConnected() -> a
    void onDisconnected() -> b
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.a.a.a.e:
    void onConnectionFailed(int,android.content.Intent) -> a
com.google.analytics.tracking.android.AnalyticsStore -> com.google.a.a.a.f:
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits(long) -> a
    void dispatch() -> a
    com.google.analytics.tracking.android.Dispatcher getDispatcher() -> b
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> com.google.a.a.a.g:
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> com.google.a.a.a.h:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void setForceLocalDispatch() -> b
    java.util.concurrent.LinkedBlockingQueue getQueue() -> c
    java.lang.Thread getThread() -> d
com.google.analytics.tracking.android.AppFieldsDefaultProvider -> com.google.a.a.a.i:
    java.lang.String mAppName -> a
    java.lang.String mAppVersion -> b
    java.lang.String mAppId -> c
    java.lang.String mAppInstallerId -> d
    com.google.analytics.tracking.android.AppFieldsDefaultProvider sInstance -> e
    java.lang.Object sInstanceLock -> f
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.AppFieldsDefaultProvider getProvider() -> a
    java.lang.String getValue(java.lang.String) -> a
com.google.analytics.tracking.android.ClientIdDefaultProvider -> com.google.a.a.a.j:
    com.google.analytics.tracking.android.ClientIdDefaultProvider sInstance -> a
    java.lang.Object sInstanceLock -> b
    android.content.Context mContext -> c
    java.lang.String mClientId -> d
    boolean mClientIdLoaded -> e
    java.lang.Object mClientIdLock -> f
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.ClientIdDefaultProvider getProvider() -> a
    java.lang.String getValue(java.lang.String) -> a
    java.lang.String blockingGetClientId() -> d
    boolean storeClientId(java.lang.String) -> b
    java.lang.String generateClientId() -> b
    void asyncInitializeClientId() -> e
    java.lang.String initializeClientId() -> c
    java.lang.Object access$000(com.google.analytics.tracking.android.ClientIdDefaultProvider) -> a
    java.lang.String access$102(com.google.analytics.tracking.android.ClientIdDefaultProvider,java.lang.String) -> a
    boolean access$202(com.google.analytics.tracking.android.ClientIdDefaultProvider,boolean) -> a
com.google.analytics.tracking.android.ClientIdDefaultProvider$1 -> com.google.a.a.a.k:
    com.google.analytics.tracking.android.ClientIdDefaultProvider this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.Clock -> com.google.a.a.a.l:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.DefaultLoggerImpl -> com.google.a.a.a.m:
    com.google.analytics.tracking.android.Logger$LogLevel mLogLevel -> a
    void verbose(java.lang.String) -> a
    void info(java.lang.String) -> b
    void warn(java.lang.String) -> c
    void error(java.lang.String) -> d
    void setLogLevel(com.google.analytics.tracking.android.Logger$LogLevel) -> a
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevel() -> a
    java.lang.String formatMessage(java.lang.String) -> e
com.google.analytics.tracking.android.DefaultProvider -> com.google.a.a.a.n:
    java.lang.String getValue(java.lang.String) -> a
com.google.analytics.tracking.android.Dispatcher -> com.google.a.a.a.o:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
    void overrideHostUrl(java.lang.String) -> a
com.google.analytics.tracking.android.EasyTracker -> com.google.a.a.a.p:
    com.google.analytics.tracking.android.EasyTracker sInstance -> a
    java.lang.String sResourcePackageName -> b
    com.google.analytics.tracking.android.GoogleAnalytics mGoogleAnalytics -> c
    boolean mIsReportUncaughtExceptionsEnabled -> d
    boolean mIsAutoActivityTracking -> e
    int mActivitiesActive -> f
    long mSessionTimeout -> g
    long mLastOnStopTime -> h
    android.content.Context mContext -> i
    java.util.Map mActivityNameMap -> j
    com.google.analytics.tracking.android.ParameterLoader mParameterFetcher -> k
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> l
    com.google.analytics.tracking.android.Clock mClock -> m
    java.util.Timer mTimer -> n
    java.util.TimerTask mTimerTask -> o
    boolean mIsInForeground -> p
    boolean mStartSessionOnNextSend -> q
    com.google.analytics.tracking.android.EasyTracker getInstance(android.content.Context) -> a
    boolean checkForNewSession() -> a
    void loadParameters() -> c
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevelFromString(java.lang.String) -> a
    void setContext(android.content.Context,com.google.analytics.tracking.android.ParameterLoader,com.google.analytics.tracking.android.ServiceManager) -> a
    void activityStart(android.app.Activity) -> a
    void activityStop(android.app.Activity) -> b
    void clearExistingTimer() -> d
    java.lang.String getActivityName(android.app.Activity) -> c
    void send(java.util.Map) -> a
    boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> a
com.google.analytics.tracking.android.EasyTracker$1 -> com.google.a.a.a.q:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> com.google.a.a.a.r:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.a.a.a.s:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.ExceptionReporter -> com.google.a.a.a.t:
    java.lang.Thread$UncaughtExceptionHandler mOriginalHandler -> a
    com.google.analytics.tracking.android.Tracker mTracker -> b
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> c
    com.google.analytics.tracking.android.ExceptionParser mExceptionParser -> d
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.FutureApis -> com.google.a.a.a.u:
    int version() -> a
    boolean setOwnerOnlyReadWrite(java.lang.String) -> a
com.google.analytics.tracking.android.GANetworkReceiver -> com.google.a.a.a.v:
    java.lang.String SELF_IDENTIFYING_EXTRA -> a
    com.google.analytics.tracking.android.ServiceManager mManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(android.content.Context) -> a
    void sendRadioPoweredBroadcast(android.content.Context) -> b
com.google.analytics.tracking.android.GAServiceManager -> com.google.a.a.a.w:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean pendingForceLocalDispatch -> g
    java.lang.String pendingHostOverride -> h
    boolean connected -> i
    boolean listenForNetwork -> j
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> k
    android.os.Handler handler -> l
    com.google.analytics.tracking.android.GANetworkReceiver networkReceiver -> m
    boolean storeIsEmpty -> n
    com.google.analytics.tracking.android.GAServiceManager instance -> o
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> a
    void initializeNetworkReceiver() -> g
    void initializeHandler() -> h
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> b
    void dispatchLocalHits() -> c
    void setLocalDispatchPeriod(int) -> a
    void setForceLocalDispatch() -> d
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> e
    boolean access$000(com.google.analytics.tracking.android.GAServiceManager) -> a
    java.lang.Object access$100() -> f
    int access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    boolean access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
    android.os.Handler access$400(com.google.analytics.tracking.android.GAServiceManager) -> d
com.google.analytics.tracking.android.GAServiceManager$1 -> com.google.a.a.a.x:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.GAServiceManager$2 -> com.google.a.a.a.y:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> com.google.a.a.a.z:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.GoogleAnalytics gaInstance -> f
    com.google.analytics.tracking.android.AnalyticsThread thread -> g
    android.content.Context ctx -> h
    java.util.Queue queue -> i
    int connectTries -> j
    java.util.Timer reConnectTimer -> k
    java.util.Timer failedConnectTimer -> l
    java.util.Timer disconnectCheckTimer -> m
    boolean pendingDispatch -> n
    boolean pendingClearHits -> o
    boolean pendingServiceDisconnect -> p
    boolean forceLocalDispatch -> q
    com.google.analytics.tracking.android.Clock clock -> r
    long idleTimeout -> s
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void clearHits() -> d
    void setForceLocalDispatch() -> e
    java.util.Timer cancelTimer(java.util.Timer) -> a
    void clearAllTimers() -> g
    void createService() -> f
    void sendQueue() -> h
    void dispatchToStore() -> i
    void useStore() -> j
    void connectToService() -> k
    void disconnectFromService() -> l
    void onConnected() -> a
    void onDisconnected() -> b
    void onConnectionFailed(int,android.content.Intent) -> a
    void fireReconnectAttempt() -> m
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> com.google.a.a.a.aa:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> com.google.a.a.a.ab:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> com.google.a.a.a.ac:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> com.google.a.a.a.ad:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> com.google.a.a.a.ae:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> com.google.a.a.a.af:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> com.google.a.a.a.ag:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    java.util.Map getWireFormatParams() -> a
    long getHitTimeInMilliseconds() -> b
    java.lang.String getPath() -> c
    java.util.List getCommands() -> d
    java.lang.String toString() -> toString
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> com.google.a.a.a.ah:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread -> com.google.a.a.a.ai:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    java.util.List mCommands -> d
    java.lang.String mInstallCampaign -> e
    java.lang.String mClientId -> f
    com.google.analytics.tracking.android.GAThread sInstance -> g
    com.google.analytics.tracking.android.ServiceProxy mServiceProxy -> h
    android.content.Context mContext -> i
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    void init() -> e
    void sendHit(java.util.Map) -> a
    java.lang.String getUrlScheme(java.util.Map) -> b
    boolean isSampledOut(java.util.Map) -> c
    int hashClientIdForSampling(java.lang.String) -> a
    void fillAppParameters(java.util.Map) -> d
    void dispatch() -> a
    void setForceLocalDispatch() -> b
    void queueToThread(java.lang.Runnable) -> a
    java.lang.String getAndClearCampaign(android.content.Context) -> b
    java.lang.String printStackTrace(java.lang.Throwable) -> a
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> c
    java.lang.Thread getThread() -> d
    java.lang.String access$000(com.google.analytics.tracking.android.GAThread) -> a
    android.content.Context access$100(com.google.analytics.tracking.android.GAThread) -> b
    boolean access$200(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    java.lang.String access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    java.util.List access$600(com.google.analytics.tracking.android.GAThread) -> d
    com.google.analytics.tracking.android.ServiceProxy access$700(com.google.analytics.tracking.android.GAThread) -> e
com.google.analytics.tracking.android.GAThread$1 -> com.google.a.a.a.aj:
    java.util.Map val$hitCopy -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> com.google.a.a.a.ak:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> com.google.a.a.a.al:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.a.a.a.am:
    java.util.SortedSet mUsedFields -> a
    java.lang.StringBuilder mSequence -> b
    boolean mDisableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    com.google.analytics.tracking.android.GAUsage getInstance() -> a
    void setDisableUsage(boolean) -> a
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    java.lang.String getAndClearUsage() -> b
    java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> com.google.a.a.a.an:
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET -> a
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET_ALL -> b
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_GET -> c
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET_CAMPAIGN_PARAMS -> d
    com.google.analytics.tracking.android.GAUsage$Field BLANK_04 -> e
    com.google.analytics.tracking.android.GAUsage$Field BLANK_05 -> f
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> g
    com.google.analytics.tracking.android.GAUsage$Field BLANK_07 -> h
    com.google.analytics.tracking.android.GAUsage$Field BLANK_08 -> i
    com.google.analytics.tracking.android.GAUsage$Field GET -> j
    com.google.analytics.tracking.android.GAUsage$Field SET -> k
    com.google.analytics.tracking.android.GAUsage$Field SEND -> l
    com.google.analytics.tracking.android.GAUsage$Field BLANK_12 -> m
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> n
    com.google.analytics.tracking.android.GAUsage$Field BLANK_14 -> o
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> p
    com.google.analytics.tracking.android.GAUsage$Field BLANK_16 -> q
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> r
    com.google.analytics.tracking.android.GAUsage$Field BLANK_18 -> s
    com.google.analytics.tracking.android.GAUsage$Field BLANK_19 -> t
    com.google.analytics.tracking.android.GAUsage$Field BLANK_20 -> u
    com.google.analytics.tracking.android.GAUsage$Field BLANK_21 -> v
    com.google.analytics.tracking.android.GAUsage$Field BLANK_22 -> w
    com.google.analytics.tracking.android.GAUsage$Field BLANK_23 -> x
    com.google.analytics.tracking.android.GAUsage$Field BLANK_24 -> y
    com.google.analytics.tracking.android.GAUsage$Field BLANK_25 -> z
    com.google.analytics.tracking.android.GAUsage$Field BLANK_26 -> A
    com.google.analytics.tracking.android.GAUsage$Field BLANK_27 -> B
    com.google.analytics.tracking.android.GAUsage$Field BLANK_28 -> C
    com.google.analytics.tracking.android.GAUsage$Field BLANK_29 -> D
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> E
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> F
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> G
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> H
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> I
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> J
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> K
    com.google.analytics.tracking.android.GAUsage$Field BLANK_37 -> L
    com.google.analytics.tracking.android.GAUsage$Field BLANK_38 -> M
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> N
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> O
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> P
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> Q
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_OPT_OUT -> R
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> S
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> T
    com.google.analytics.tracking.android.GAUsage$Field BLANK_46 -> U
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> V
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> W
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> X
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> Y
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> Z
    com.google.analytics.tracking.android.GAUsage$Field BLANK_52 -> aa
    com.google.analytics.tracking.android.GAUsage$Field BLANK_53 -> ab
    com.google.analytics.tracking.android.GAUsage$Field SET_DRY_RUN -> ac
    com.google.analytics.tracking.android.GAUsage$Field GET_DRY_RUN -> ad
    com.google.analytics.tracking.android.GAUsage$Field SET_LOGGER -> ae
    com.google.analytics.tracking.android.GAUsage$Field SET_FORCE_LOCAL_DISPATCH -> af
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER_NAME -> ag
    com.google.analytics.tracking.android.GAUsage$Field CLOSE_TRACKER -> ah
    com.google.analytics.tracking.android.GAUsage$Field EASY_TRACKER_ACTIVITY_START -> ai
    com.google.analytics.tracking.android.GAUsage$Field EASY_TRACKER_ACTIVITY_STOP -> aj
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_APP_VIEW -> ak
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> al
    com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.a.a.a.ao:
    boolean mDryRun -> a
    com.google.analytics.tracking.android.AnalyticsThread mThread -> b
    android.content.Context mContext -> c
    java.lang.Boolean mAppOptOut -> d
    java.util.Map mTrackers -> e
    com.google.analytics.tracking.android.Logger mLogger -> f
    com.google.analytics.tracking.android.GoogleAnalytics sInstance -> g
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> a
    com.google.analytics.tracking.android.GoogleAnalytics getInstance() -> a
    void setDryRun(boolean) -> a
    boolean isDryRunEnabled() -> b
    void sendHit(java.util.Map) -> a
    boolean getAppOptOut() -> c
    com.google.analytics.tracking.android.Logger getLogger() -> d
com.google.analytics.tracking.android.Hit -> com.google.a.a.a.ap:
    java.lang.String mHitString -> a
    long mHitId -> b
    long mHitTime -> c
    java.lang.String mHitUrlScheme -> d
    java.lang.String getHitParams() -> a
    void setHitString(java.lang.String) -> a
    long getHitId() -> b
    long getHitTime() -> c
    java.lang.String getHitUrlScheme() -> d
    void setHitUrl(java.lang.String) -> b
com.google.analytics.tracking.android.HitBuilder -> com.google.a.a.a.aq:
    java.util.Map generateHitParams(java.util.Map) -> a
    java.lang.String postProcessHit(com.google.analytics.tracking.android.Hit,long) -> a
    java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.Log -> com.google.a.a.a.ar:
    com.google.analytics.tracking.android.GoogleAnalytics sGaInstance -> a
    void e(java.lang.String) -> a
    void i(java.lang.String) -> b
    void v(java.lang.String) -> c
    void w(java.lang.String) -> d
    boolean isVerbose() -> a
    com.google.analytics.tracking.android.Logger getLogger() -> b
com.google.analytics.tracking.android.Logger -> com.google.a.a.a.as:
    void verbose(java.lang.String) -> a
    void info(java.lang.String) -> b
    void warn(java.lang.String) -> c
    void error(java.lang.String) -> d
    void setLogLevel(com.google.analytics.tracking.android.Logger$LogLevel) -> a
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevel() -> a
com.google.analytics.tracking.android.Logger$LogLevel -> com.google.a.a.a.at:
    com.google.analytics.tracking.android.Logger$LogLevel VERBOSE -> a
    com.google.analytics.tracking.android.Logger$LogLevel INFO -> b
    com.google.analytics.tracking.android.Logger$LogLevel WARNING -> c
    com.google.analytics.tracking.android.Logger$LogLevel ERROR -> d
    com.google.analytics.tracking.android.Logger$LogLevel[] $VALUES -> e
    com.google.analytics.tracking.android.Logger$LogLevel[] values() -> values
    com.google.analytics.tracking.android.Logger$LogLevel valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.MapBuilder -> com.google.a.a.a.au:
    java.util.Map map -> a
    com.google.analytics.tracking.android.MapBuilder set(java.lang.String,java.lang.String) -> a
    java.util.Map build() -> a
    com.google.analytics.tracking.android.MapBuilder createException(java.lang.String,java.lang.Boolean) -> a
    com.google.analytics.tracking.android.MapBuilder setCampaignParamsFromUrl(java.lang.String) -> a
    java.lang.String booleanToString(java.lang.Boolean) -> a
com.google.analytics.tracking.android.ParameterLoader -> com.google.a.a.a.av:
    java.lang.String getString(java.lang.String) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    void setResourcePackageName(java.lang.String) -> d
com.google.analytics.tracking.android.ParameterLoaderImpl -> com.google.a.a.a.aw:
    android.content.Context mContext -> a
    java.lang.String mOverrideResourcePackageName -> b
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    void setResourcePackageName(java.lang.String) -> d
com.google.analytics.tracking.android.PersistentAnalyticsStore -> com.google.a.a.a.ax:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper mDbHelper -> b
    com.google.analytics.tracking.android.Dispatcher mDispatcher -> c
    com.google.analytics.tracking.android.AnalyticsStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.analytics.tracking.android.Clock mClock -> h
    void clearHits(long) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void fillVersionParameter(java.util.Map,java.util.Collection) -> a
    void removeOldHitIfFull() -> f
    void writeHitToDatabase(java.util.Map,long,java.lang.String) -> a
    java.lang.String generateHitString(java.util.Map) -> a
    java.util.List peekHitIds(int) -> a
    java.util.List peekHits(int) -> b
    int deleteStaleHits() -> c
    void deleteHits(java.util.Collection) -> a
    void deleteHits(java.lang.String[]) -> a
    int getNumStoredHits() -> d
    void dispatch() -> a
    com.google.analytics.tracking.android.Dispatcher getDispatcher() -> b
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    com.google.analytics.tracking.android.Clock access$000(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> a
    java.lang.String access$100(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> b
    android.content.Context access$200(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> c
    java.lang.String access$300() -> e
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> com.google.a.a.a.ay:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> com.google.a.a.a.az:
    boolean mBadDatabase -> b
    long mLastDatabaseCheckTime -> c
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void validateColumnsPresent(android.database.sqlite.SQLiteDatabase) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ScreenResolutionDefaultProvider -> com.google.a.a.a.ba:
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider sInstance -> a
    java.lang.Object sInstanceLock -> b
    android.content.Context mContext -> c
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider getProvider() -> a
    java.lang.String getValue(java.lang.String) -> a
    java.lang.String getScreenResolutionString() -> b
com.google.analytics.tracking.android.ServiceManager -> com.google.a.a.a.bb:
    void dispatchLocalHits() -> c
    void setLocalDispatchPeriod(int) -> a
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> e
com.google.analytics.tracking.android.ServiceProxy -> com.google.a.a.a.bc:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void setForceLocalDispatch() -> e
    void dispatch() -> c
    void createService() -> f
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> com.google.a.a.a.bd:
    java.lang.String userAgent -> a
    org.apache.http.client.HttpClient httpClient -> b
    android.content.Context ctx -> c
    com.google.analytics.tracking.android.GoogleAnalytics gaInstance -> d
    java.net.URL mOverrideHostUrl -> e
    boolean okToDispatch() -> a
    int dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    void logDebugInformation(org.apache.http.HttpEntityEnclosingRequest) -> a
    java.lang.String createUserAgentString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
    void overrideHostUrl(java.lang.String) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.a.a.a.be:
    java.util.TreeSet includedPackages -> a
    void setIncludedPackages(android.content.Context,java.util.Collection) -> a
    java.lang.Throwable getCause(java.lang.Throwable) -> a
    java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> b
    java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> a
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.Tracker -> com.google.a.a.a.bf:
    java.lang.String mName -> a
    com.google.analytics.tracking.android.TrackerHandler mHandler -> b
    java.util.Map mParams -> c
    long mTokens -> d
    long mLastTrackTime -> e
    com.google.analytics.tracking.android.ClientIdDefaultProvider mClientIdDefaultProvider -> f
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider mScreenResolutionDefaultProvider -> g
    com.google.analytics.tracking.android.AppFieldsDefaultProvider mAppFieldsDefaultProvider -> h
    void send(java.util.Map) -> a
    void set(java.lang.String,java.lang.String) -> a
    boolean tokensAvailable() -> b
com.google.analytics.tracking.android.TrackerHandler -> com.google.a.a.a.bg:
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Utils -> com.google.a.a.a.bh:
    char[] HEXBYTES -> a
    java.util.Map parseURLParameters(java.lang.String) -> a
    double safeParseDouble(java.lang.String,double) -> a
    boolean safeParseBoolean(java.lang.String,boolean) -> a
    java.lang.String filterCampaign(java.lang.String) -> b
    java.lang.String getLanguage(java.util.Locale) -> a
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    java.lang.String getValue() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.analytics.internal.Command$1 -> com.google.android.gms.analytics.internal.a:
    com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.analytics.internal.Command[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.android.gms.analytics.internal.b:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.android.gms.analytics.internal.c:
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> com.google.android.gms.analytics.internal.d:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.lq.activity.FeedbackActivity -> com.lq.activity.FeedbackActivity:
    android.widget.EditText mView_FeedbackContent -> n
    android.widget.Button mView_Submit -> o
    android.view.View mView_Close -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void findViews() -> f
    void initViewsSetting() -> g
    void onClick(android.view.View) -> onClick
com.lq.activity.FolderChooseActivity -> com.lq.activity.FolderChooseActivity:
    java.lang.String TAG -> p
    android.widget.ImageView mView_Close -> q
    android.widget.TextView mView_Title -> r
    android.widget.ListView mView_ListView -> s
    android.widget.Button mView_Confirm -> t
    android.widget.Button mView_CreateFolder -> u
    android.widget.ImageButton mView_BackToPrev -> v
    android.widget.TextView mView_CurrentPath -> w
    android.widget.ArrayAdapter mAdapter -> x
    java.util.ArrayList mCurFolderList -> y
    com.lq.fragment.EditTextDialogFragment mCreateNewFolderDialogFragment -> z
    java.util.LinkedList mPathStack -> A
    java.lang.String mCurPath -> B
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener mCreateNewFolderListener -> n
    java.util.Comparator mFolderNameComparator -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onBackPressed() -> onBackPressed
    void backToPrevFolder() -> f
    void findViews() -> g
    void initViewsSetting() -> h
    void updateFolderList() -> i
    java.lang.String access$0(com.lq.activity.FolderChooseActivity) -> a
    java.lang.String access$1(com.lq.activity.FolderChooseActivity) -> b
    com.lq.fragment.EditTextDialogFragment access$2(com.lq.activity.FolderChooseActivity) -> c
    void access$3(com.lq.activity.FolderChooseActivity) -> d
    android.widget.ArrayAdapter access$4(com.lq.activity.FolderChooseActivity) -> e
    java.util.LinkedList access$5(com.lq.activity.FolderChooseActivity) -> f
    void access$6(com.lq.activity.FolderChooseActivity,java.lang.String) -> a
    android.widget.TextView access$7(com.lq.activity.FolderChooseActivity) -> g
    android.widget.ImageButton access$8(com.lq.activity.FolderChooseActivity) -> h
    void access$9(com.lq.activity.FolderChooseActivity,com.lq.fragment.EditTextDialogFragment) -> a
    void access$10(com.lq.activity.FolderChooseActivity) -> i
com.lq.activity.FolderChooseActivity$1 -> com.lq.activity.a:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onEditTextInputCompleted(java.lang.String) -> a
com.lq.activity.FolderChooseActivity$2 -> com.lq.activity.b:
    char first_l -> a
    char first_r -> b
    com.lq.activity.FolderChooseActivity this$0 -> c
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.activity.FolderChooseActivity$3 -> com.lq.activity.c:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.activity.FolderChooseActivity$4 -> com.lq.activity.d:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.FolderChooseActivity$5 -> com.lq.activity.e:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.FolderChooseActivity$6 -> com.lq.activity.f:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.FolderChooseActivity$7 -> com.lq.activity.g:
    com.lq.activity.FolderChooseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.MainContentActivity -> com.lq.activity.MainContentActivity:
    java.lang.String TAG -> n
    android.view.GestureDetector mDetector -> o
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> p
    java.util.List mFragmentList -> q
    android.support.v4.app.Fragment mCurrentFragment -> r
    int mBackStackEntryCount -> s
    java.util.List mBackKeyPressedListeners -> t
    void onCreate(android.os.Bundle) -> onCreate
    void initSlidingMenu() -> i
    void initPopulateFragment() -> j
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> f
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void registerBackKeyPressedListener(com.lq.activity.MainContentActivity$OnBackKeyPressedListener) -> a
    void unregisterBackKeyPressedListener(com.lq.activity.MainContentActivity$OnBackKeyPressedListener) -> b
    void switchToPlayer() -> g
    void switchContent(java.lang.String) -> b
    void exit() -> h
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onBackStackChanged() -> a
com.lq.activity.MainContentActivity$1 -> com.lq.activity.h:
    com.lq.activity.MainContentActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.activity.MainContentActivity$2 -> com.lq.activity.i:
    com.lq.activity.MainContentActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.activity.MainContentActivity$OnBackKeyPressedListener -> com.lq.activity.j:
    void onBackKeyPressed() -> a
com.lq.activity.MutipleEditActivity -> com.lq.activity.MutipleEditActivity:
    java.lang.String ACTION_FINISH -> n
    java.lang.String TAG -> o
    android.widget.ImageView mView_Close -> p
    android.widget.TextView mView_Title -> q
    android.widget.TextView mView_NumOfSelect -> r
    android.widget.CheckBox mView_SelectAll -> s
    android.widget.ListView mView_ListView -> t
    android.view.View mView_PlayListLater -> u
    android.view.View mView_AddToPlaylist -> v
    android.view.View mView_Delete -> w
    com.lq.adapter.TrackMutipleChooseAdapter mAdapter -> x
    java.util.ArrayList mDataList -> y
    java.lang.String mTitle -> z
    int mFirstVisiblePosition -> A
    int mParent -> B
    int mPlaylistId -> C
    int mCloseDelayTime -> D
    android.support.v4.content.LocalBroadcastManager mLocalBroadcastManager -> E
    android.content.BroadcastReceiver mReceiver -> F
    com.lq.service.MusicService$MusicPlaybackLocalBinder mMusicServiceBinder -> G
    com.lq.activity.MutipleEditActivity$MyHandler mHandler -> H
    android.content.DialogInterface$OnClickListener mDeletePromptListener -> I
    android.content.ServiceConnection mServiceConnection -> J
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void handleArguments() -> f
    void initBroadcastReceiver() -> g
    void findViews() -> h
    void initViewsSetting() -> i
    void onClick(android.view.View) -> onClick
    int access$0(com.lq.activity.MutipleEditActivity) -> a
    int access$1(com.lq.activity.MutipleEditActivity) -> b
    com.lq.adapter.TrackMutipleChooseAdapter access$2(com.lq.activity.MutipleEditActivity) -> c
    com.lq.activity.MutipleEditActivity$MyHandler access$3(com.lq.activity.MutipleEditActivity) -> d
    int access$4(com.lq.activity.MutipleEditActivity) -> e
    java.lang.String access$5(com.lq.activity.MutipleEditActivity) -> f
    void access$6(com.lq.activity.MutipleEditActivity,com.lq.service.MusicService$MusicPlaybackLocalBinder) -> a
    android.widget.TextView access$7(com.lq.activity.MutipleEditActivity) -> g
com.lq.activity.MutipleEditActivity$1 -> com.lq.activity.k:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.activity.MutipleEditActivity$2 -> com.lq.activity.l:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.lq.activity.MutipleEditActivity$3 -> com.lq.activity.m:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.activity.MutipleEditActivity$4 -> com.lq.activity.n:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.activity.MutipleEditActivity$5 -> com.lq.activity.o:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.MutipleEditActivity$6 -> com.lq.activity.p:
    com.lq.activity.MutipleEditActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.lq.activity.MutipleEditActivity$MyHandler -> com.lq.activity.q:
    java.lang.ref.WeakReference mWeakReference -> a
    com.lq.activity.MutipleEditActivity mActivity -> b
    void handleMessage(android.os.Message) -> handleMessage
com.lq.activity.MyPreferenceActivity -> com.lq.activity.MyPreferenceActivity:
    java.lang.String TAG -> a
    android.view.View mView_Close -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
com.lq.activity.MyPreferenceActivity$1 -> com.lq.activity.r:
    com.lq.activity.MyPreferenceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayQueueActivity -> com.lq.activity.PlayQueueActivity:
    java.lang.String TAG -> n
    android.widget.ListView mListView -> o
    android.view.View mClear -> p
    android.widget.TextView mTitle -> q
    java.util.ArrayList mDataList -> r
    java.util.ArrayList mShownList -> s
    int mPlayingSongPosition -> t
    com.lq.activity.PlayQueueActivity$MyArrayAdapter mAdapter -> u
    com.lq.service.MusicService$MusicPlaybackLocalBinder mMusicServiceBinder -> v
    com.lq.entity.TrackInfo mPlayingTrack -> w
    int mPlayingState -> x
    android.content.ServiceConnection mServiceConnection -> y
    android.content.DialogInterface$OnClickListener mDeletePromptListener -> z
    com.lq.listener.OnPlaybackStateChangeListener mOnPlaybackStateChangeListener -> A
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onAttachedToWindow() -> onAttachedToWindow
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void handleArguments() -> g
    void initViewsSetting() -> h
    java.lang.String access$0() -> f
    void access$1(com.lq.activity.PlayQueueActivity,com.lq.service.MusicService$MusicPlaybackLocalBinder) -> a
    com.lq.service.MusicService$MusicPlaybackLocalBinder access$2(com.lq.activity.PlayQueueActivity) -> a
    com.lq.listener.OnPlaybackStateChangeListener access$3(com.lq.activity.PlayQueueActivity) -> b
    void access$4(com.lq.activity.PlayQueueActivity) -> c
    void access$5(com.lq.activity.PlayQueueActivity) -> d
    java.util.ArrayList access$6(com.lq.activity.PlayQueueActivity) -> e
    com.lq.activity.PlayQueueActivity$MyArrayAdapter access$7(com.lq.activity.PlayQueueActivity) -> f
    android.widget.TextView access$8(com.lq.activity.PlayQueueActivity) -> g
    void access$9(com.lq.activity.PlayQueueActivity,int) -> a
    java.util.ArrayList access$10(com.lq.activity.PlayQueueActivity) -> h
    void access$11(com.lq.activity.PlayQueueActivity,int) -> b
    int access$12(com.lq.activity.PlayQueueActivity) -> i
    android.content.DialogInterface$OnClickListener access$13(com.lq.activity.PlayQueueActivity) -> j
com.lq.activity.PlayQueueActivity$1 -> com.lq.activity.s:
    com.lq.activity.PlayQueueActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.lq.activity.PlayQueueActivity$2 -> com.lq.activity.t:
    com.lq.activity.PlayQueueActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.activity.PlayQueueActivity$3 -> com.lq.activity.u:
    com.lq.activity.PlayQueueActivity this$0 -> a
    void onMusicPlayed() -> a
    void onMusicPaused() -> b
    void onMusicStopped() -> c
    void onPlayNewSong(com.lq.entity.TrackInfo) -> a
    void onPlayModeChanged(int) -> a
    void onPlayProgressUpdate(int) -> b
com.lq.activity.PlayQueueActivity$4 -> com.lq.activity.v:
    com.lq.activity.PlayQueueActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayQueueActivity$MyArrayAdapter -> com.lq.activity.w:
    com.lq.activity.PlayQueueActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.lq.activity.PlayerActivity -> com.lq.activity.PlayerActivity:
    java.lang.String TAG -> n
    android.view.GestureDetector mDetector -> o
    android.widget.ImageButton mView_ib_back -> p
    android.widget.ImageButton mView_ib_more_functions -> q
    android.widget.TextView mView_tv_songtitle -> r
    android.widget.TextView mView_tv_current_time -> s
    android.widget.TextView mView_tv_total_time -> t
    android.widget.TextView mView_tv_lyric_empty -> u
    android.widget.SeekBar mView_sb_song_progress -> v
    android.widget.ImageButton mView_ib_play_mode -> w
    android.widget.ImageButton mView_ib_play_previous -> x
    android.widget.ImageButton mView_ib_play_or_pause -> y
    android.widget.ImageButton mView_ib_play_next -> z
    android.widget.ImageButton mView_ib_playqueue -> A
    android.widget.ListView mView_lv_lyricshow -> B
    android.widget.PopupMenu mOverflowPopupMenu -> C
    com.lq.adapter.LyricAdapter mLyricAdapter -> D
    boolean mIsPlay -> E
    com.lq.entity.TrackInfo mPlaySong -> F
    com.lq.service.MusicService$MusicPlaybackLocalBinder mMusicServiceBinder -> G
    com.lq.activity.PlayerActivity$ClientIncomingHandler mHandler -> H
    android.content.ServiceConnection mServiceConnection -> I
    com.lq.listener.OnPlaybackStateChangeListener mOnPlaybackStateChangeListener -> J
    com.lq.util.LyricLoadHelper$LyricListener mLyricListener -> K
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onBackPressed() -> onBackPressed
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void initViewsSetting() -> f
    void setPlayModeImage(int) -> a
    void initCurrentPlayInfo(android.os.Bundle) -> a
    void findViews() -> g
    void switchToMain() -> h
    void access$0(com.lq.activity.PlayerActivity,com.lq.service.MusicService$MusicPlaybackLocalBinder) -> a
    com.lq.service.MusicService$MusicPlaybackLocalBinder access$1(com.lq.activity.PlayerActivity) -> a
    com.lq.util.LyricLoadHelper$LyricListener access$2(com.lq.activity.PlayerActivity) -> b
    com.lq.listener.OnPlaybackStateChangeListener access$3(com.lq.activity.PlayerActivity) -> c
    void access$4(com.lq.activity.PlayerActivity,android.os.Bundle) -> a
    void access$5(com.lq.activity.PlayerActivity,boolean) -> a
    android.widget.ImageButton access$6(com.lq.activity.PlayerActivity) -> d
    android.widget.TextView access$7(com.lq.activity.PlayerActivity) -> e
    android.widget.TextView access$8(com.lq.activity.PlayerActivity) -> f
    android.widget.TextView access$9(com.lq.activity.PlayerActivity) -> g
    android.widget.SeekBar access$10(com.lq.activity.PlayerActivity) -> h
    com.lq.adapter.LyricAdapter access$11(com.lq.activity.PlayerActivity) -> i
    void access$12(com.lq.activity.PlayerActivity,com.lq.entity.TrackInfo) -> a
    android.widget.TextView access$13(com.lq.activity.PlayerActivity) -> j
    void access$14(com.lq.activity.PlayerActivity,int) -> a
    com.lq.entity.TrackInfo access$15(com.lq.activity.PlayerActivity) -> k
    com.lq.activity.PlayerActivity$ClientIncomingHandler access$16(com.lq.activity.PlayerActivity) -> l
    android.widget.ListView access$17(com.lq.activity.PlayerActivity) -> m
    void access$18(com.lq.activity.PlayerActivity) -> n
    android.view.GestureDetector access$19(com.lq.activity.PlayerActivity) -> o
    boolean access$20(com.lq.activity.PlayerActivity) -> p
    android.widget.PopupMenu access$21(com.lq.activity.PlayerActivity) -> q
com.lq.activity.PlayerActivity$1 -> com.lq.activity.x:
    com.lq.activity.PlayerActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.lq.activity.PlayerActivity$10 -> com.lq.activity.y:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$11 -> com.lq.activity.z:
    com.lq.activity.PlayerActivity this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.lq.activity.PlayerActivity$12 -> com.lq.activity.aa:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$13 -> com.lq.activity.ab:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$14 -> com.lq.activity.ac:
    com.lq.activity.PlayerActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.activity.PlayerActivity$2 -> com.lq.activity.ad:
    com.lq.activity.PlayerActivity this$0 -> a
    void onMusicPlayed() -> a
    void onMusicPaused() -> b
    void onMusicStopped() -> c
    void onPlayNewSong(com.lq.entity.TrackInfo) -> a
    void onPlayModeChanged(int) -> a
    void onPlayProgressUpdate(int) -> b
com.lq.activity.PlayerActivity$3 -> com.lq.activity.ae:
    com.lq.activity.PlayerActivity this$0 -> a
    void onLyricLoaded(java.util.List,int) -> a
    void onLyricSentenceChanged(int) -> a
com.lq.activity.PlayerActivity$4 -> com.lq.activity.af:
    com.lq.activity.PlayerActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.activity.PlayerActivity$5 -> com.lq.activity.ag:
    com.lq.activity.PlayerActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.activity.PlayerActivity$6 -> com.lq.activity.ah:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$7 -> com.lq.activity.ai:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$8 -> com.lq.activity.aj:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$9 -> com.lq.activity.ak:
    com.lq.activity.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.activity.PlayerActivity$ClientIncomingHandler -> com.lq.activity.al:
    java.lang.ref.WeakReference mFragmentWeakReference -> a
    com.lq.activity.PlayerActivity mActivity -> b
    void handleMessage(android.os.Message) -> handleMessage
com.lq.activity.SplashActivity -> com.lq.activity.SplashActivity:
    com.lq.activity.SplashActivity$MyHandler mHandler -> n
    int mDelayMillis -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onBackPressed() -> onBackPressed
    void initUmengSDK() -> f
com.lq.activity.SplashActivity$MyHandler -> com.lq.activity.am:
    java.lang.ref.WeakReference mFragmentWeakReference -> a
    com.lq.activity.SplashActivity mActivity -> b
    void handleMessage(android.os.Message) -> handleMessage
com.lq.adapter.AlbumAdapter -> com.lq.a.a:
    java.lang.String TAG -> a
    java.util.List mData -> b
    android.content.Context mContext -> c
    void setData(java.util.List) -> a
    java.util.List getData() -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    com.lq.entity.AlbumInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.AlbumAdapter$ViewHolder -> com.lq.a.b:
    android.widget.TextView album_name -> a
    android.widget.TextView num_of_tracks -> b
    android.widget.ImageView album_picture -> c
com.lq.adapter.ArtistAdapter -> com.lq.a.c:
    java.util.List mData -> a
    android.content.Context mContext -> b
    void setData(java.util.List) -> a
    java.util.List getData() -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    com.lq.entity.ArtistInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.ArtistAdapter$ViewHolder -> com.lq.a.d:
    android.widget.TextView artist_name -> a
    android.widget.TextView num_of_tracks -> b
com.lq.adapter.FolderAdapter -> com.lq.a.e:
    java.util.List mData -> a
    android.content.Context mContext -> b
    void setData(java.util.List) -> a
    java.util.List getData() -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    com.lq.entity.FolderInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.FolderAdapter$ViewHolder -> com.lq.a.f:
    android.widget.TextView folder_name -> a
    android.widget.TextView folder_path -> b
    android.widget.TextView song_count_of_folder -> c
com.lq.adapter.LyricAdapter -> com.lq.a.g:
    java.lang.String TAG -> f
    java.util.List mLyricSentences -> a
    android.content.Context mContext -> b
    int mIndexOfCurrentSentence -> c
    float mCurrentSize -> d
    float mNotCurrentSize -> e
    void setLyric(java.util.List) -> a
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCurrentSentenceIndex(int) -> a
com.lq.adapter.LyricAdapter$ViewHolder -> com.lq.a.h:
    android.widget.TextView lyric_line -> a
com.lq.adapter.PlaylistAdapter -> com.lq.a.i:
    java.util.List mData -> a
    android.content.Context mContext -> b
    boolean mMenuVisible -> c
    void setData(java.util.List) -> a
    java.util.List getData() -> a
    void setPopupMenuVisible(boolean) -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    com.lq.entity.PlaylistInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.PlaylistAdapter$ViewHolder -> com.lq.a.j:
    android.widget.TextView playlist_name -> a
    android.widget.TextView playlist_members_count -> b
    android.view.View popup_menu -> c
com.lq.adapter.TrackAdapter -> com.lq.a.k:
    android.content.Context mContext -> a
    java.util.ArrayList mData -> b
    int mActivateItemPos -> c
    void setData(java.util.List) -> a
    java.util.ArrayList getData() -> a
    void setSpecifiedIndicator(int) -> a
    boolean isEmpty() -> isEmpty
    int getCount() -> getCount
    com.lq.entity.TrackInfo getItem(int) -> b
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.TrackAdapter$ViewHolder -> com.lq.a.l:
    android.widget.TextView title -> a
    android.widget.TextView artist -> b
    android.view.View indicator -> c
    android.widget.ImageButton popup_menu -> d
com.lq.adapter.TrackMutipleChooseAdapter -> com.lq.a.m:
    java.util.ArrayList mData -> a
    android.content.Context mContext -> b
    android.util.SparseBooleanArray mCheckedStates -> c
    void selectAllItem(boolean) -> a
    long[] getSelectedAudioIds() -> a
    java.lang.String[] getSelectedAudioPaths() -> b
    java.util.List getSelectedItems() -> c
    int[] getSelectedItemPositions() -> d
    void toggleCheckedState(int) -> a
    int getCount() -> getCount
    com.lq.entity.TrackInfo getItem(int) -> b
    boolean isEmpty() -> isEmpty
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.lq.adapter.TrackMutipleChooseAdapter$ViewHolder -> com.lq.a.n:
    android.widget.TextView track_name -> a
    android.widget.TextView artist -> b
    android.widget.CheckBox checkbox -> c
com.lq.dao.PlaylistDAO -> com.lq.b.a:
    java.lang.String TAG -> a
    int createPlaylist(android.content.ContentResolver,java.lang.String) -> a
    boolean updatePlaylistName(android.content.ContentResolver,java.lang.String,int) -> a
    void deletePlaylist(android.content.ContentResolver,int) -> a
    boolean addTrackToPlaylist(android.content.ContentResolver,long,long[]) -> a
    boolean isIdInTheIntArray(long,long[]) -> a
    boolean removeTrackFromPlaylist(android.content.ContentResolver,long,long[]) -> b
    int getPlaylistMemberCount(android.content.ContentResolver,int) -> b
    boolean deleteFile(java.lang.String) -> a
    boolean deleteFiles(java.lang.String[]) -> a
    boolean removeTrackFromDatabase(android.content.ContentResolver,long[]) -> a
com.lq.entity.AlbumInfo -> com.lq.entity.AlbumInfo:
    java.lang.String album_name -> a
    int album_id -> b
    int number_of_songs -> c
    java.lang.String art_work -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getArtWork() -> a
    void setArtWork(java.lang.String) -> a
    java.lang.String getAlbumName() -> b
    void setAlbumName(java.lang.String) -> b
    int getAlbumId() -> c
    void setAlbumId(int) -> a
    int getNumberOfSongs() -> d
    void setNumberOfSongs(int) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lq.entity.AlbumInfo$1 -> com.lq.entity.a:
    com.lq.entity.AlbumInfo createFromParcel(android.os.Parcel) -> a
    com.lq.entity.AlbumInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lq.entity.ArtistInfo -> com.lq.entity.ArtistInfo:
    java.lang.String artist_name -> a
    int number_of_tracks -> b
    int number_of_albums -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setNumberOfAlbums(int) -> a
    int getNumberOfTracks() -> a
    void setNumberOfTracks(int) -> b
    java.lang.String getArtistName() -> b
    void setArtistName(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lq.entity.ArtistInfo$1 -> com.lq.entity.b:
    com.lq.entity.ArtistInfo createFromParcel(android.os.Parcel) -> a
    com.lq.entity.ArtistInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lq.entity.FolderInfo -> com.lq.entity.FolderInfo:
    java.lang.String folder_name -> a
    java.lang.String folder_path -> b
    int num_of_tracks -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getFolderName() -> a
    void setFolderName(java.lang.String) -> a
    java.lang.String getFolderPath() -> b
    void setFolderPath(java.lang.String) -> b
    int getNumOfTracks() -> c
    void setNumOfTracks(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lq.entity.FolderInfo$1 -> com.lq.entity.c:
    com.lq.entity.FolderInfo createFromParcel(android.os.Parcel) -> a
    com.lq.entity.FolderInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lq.entity.LyricSentence -> com.lq.entity.d:
    long startTime -> a
    long duringTime -> b
    java.lang.String contentText -> c
    long getStartTime() -> a
    java.lang.String getContentText() -> b
    void setDuringTime(long) -> a
com.lq.entity.PlaylistInfo -> com.lq.entity.PlaylistInfo:
    int id -> a
    java.lang.String playlist_name -> b
    long date_added -> c
    long date_modified -> d
    int num_of_members -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    void setId(int) -> a
    int getNumOfMembers() -> b
    void setNumOfMembers(int) -> b
    java.lang.String getPlaylistName() -> c
    void setPlaylistName(java.lang.String) -> a
    void setDateAdded(long) -> a
    void setDateModified(long) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lq.entity.PlaylistInfo$1 -> com.lq.entity.e:
    com.lq.entity.PlaylistInfo createFromParcel(android.os.Parcel) -> a
    com.lq.entity.PlaylistInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lq.entity.TrackInfo -> com.lq.entity.TrackInfo:
    long id -> a
    java.lang.String title -> b
    java.lang.String display_name -> c
    java.lang.String album -> d
    java.lang.String artist -> e
    java.lang.String data -> f
    long size -> g
    long duration -> h
    java.lang.String title_key -> i
    java.lang.String artist_key -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getArtistKey() -> a
    java.lang.String getTitleKey() -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    long getDuration() -> c
    void setDuration(long) -> a
    long getId() -> d
    void setId(long) -> b
    java.lang.String getTitle() -> e
    void setTitle(java.lang.String) -> a
    void setAlbum(java.lang.String) -> b
    java.lang.String getData() -> f
    void setData(java.lang.String) -> c
    long getSize() -> g
    void setSize(long) -> c
    java.lang.String getArtist() -> h
    void setArtist(java.lang.String) -> d
    void setDisplayName(java.lang.String) -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lq.entity.TrackInfo$1 -> com.lq.entity.f:
    com.lq.entity.TrackInfo createFromParcel(android.os.Parcel) -> a
    com.lq.entity.TrackInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lq.fragment.AddTrackToNewPlaylistDialogFragment -> com.lq.c.a:
    java.lang.String TAG -> Y
    long[] mAudioIds -> Z
    android.widget.EditText mView_et_PlaylistName -> aa
    android.app.AlertDialog mAlertDialog -> ab
    android.content.DialogInterface$OnClickListener mPositiveClickListener -> ac
    android.content.DialogInterface$OnClickListener mNegativeClickListener -> ad
    com.lq.fragment.AddTrackToNewPlaylistDialogFragment newInstance(long[]) -> a
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onDestroy() -> s
    void addTrackToPlaylist(java.lang.String) -> a
    void setWindowShownWhenClickedButton(boolean) -> c
    android.widget.EditText access$0(com.lq.fragment.AddTrackToNewPlaylistDialogFragment) -> a
    void access$1(com.lq.fragment.AddTrackToNewPlaylistDialogFragment,boolean) -> a
    void access$2(com.lq.fragment.AddTrackToNewPlaylistDialogFragment,java.lang.String) -> a
com.lq.fragment.AddTrackToNewPlaylistDialogFragment$1 -> com.lq.c.b:
    com.lq.fragment.AddTrackToNewPlaylistDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.AddTrackToNewPlaylistDialogFragment$2 -> com.lq.c.c:
    com.lq.fragment.AddTrackToNewPlaylistDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.AlbumBrowserFragment -> com.lq.c.d:
    java.lang.String TAG -> a
    int ALBUM_RETRIEVE_LOADER -> b
    android.view.GestureDetector mDetector -> c
    android.widget.ImageView mView_MenuNavigation -> d
    android.widget.ImageView mView_MoreFunctions -> e
    android.widget.ImageView mView_GoToPlayer -> f
    android.widget.TextView mView_Title -> g
    android.widget.ListView mView_ListView -> h
    android.widget.PopupMenu mOverflowPopupMenu -> i
    com.lq.adapter.AlbumAdapter mAdapter -> Y
    com.lq.activity.MainContentActivity mActivity -> Z
    java.lang.String mSortOrder -> aa
    android.content.BroadcastReceiver mExternalStorageReceiver -> ab
    void onAttach(android.app.Activity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> q
    void onStop() -> e
    void onDetach() -> c
    void initViewsSetting() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void setTitleLeftDrawable() -> b
    void startWatchingExternalStorage() -> E
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.widget.ImageView access$1(com.lq.fragment.AlbumBrowserFragment) -> a
    android.widget.TextView access$2(com.lq.fragment.AlbumBrowserFragment) -> b
    com.lq.adapter.AlbumAdapter access$3(com.lq.fragment.AlbumBrowserFragment) -> c
    com.lq.activity.MainContentActivity access$4(com.lq.fragment.AlbumBrowserFragment) -> d
    android.view.GestureDetector access$5(com.lq.fragment.AlbumBrowserFragment) -> e
    void access$6(com.lq.fragment.AlbumBrowserFragment,java.lang.String) -> a
    android.widget.PopupMenu access$7(com.lq.fragment.AlbumBrowserFragment) -> f
com.lq.fragment.AlbumBrowserFragment$1 -> com.lq.c.e:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.AlbumBrowserFragment$2 -> com.lq.c.f:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.fragment.AlbumBrowserFragment$3 -> com.lq.c.g:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.fragment.AlbumBrowserFragment$4 -> com.lq.c.h:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.fragment.AlbumBrowserFragment$5 -> com.lq.c.i:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.AlbumBrowserFragment$6 -> com.lq.c.j:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.AlbumBrowserFragment$7 -> com.lq.c.k:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.fragment.AlbumBrowserFragment$8 -> com.lq.c.l:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.AlbumBrowserFragment$9 -> com.lq.c.m:
    com.lq.fragment.AlbumBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.ArtistBrowserFragment -> com.lq.c.n:
    java.lang.String TAG -> a
    int ARTIST_RETRIEVE_LOADER -> b
    android.view.GestureDetector mDetector -> c
    android.widget.ImageView mView_MenuNavigation -> d
    android.widget.ImageView mView_MoreFunctions -> e
    android.widget.ImageView mView_GoToPlayer -> f
    android.widget.TextView mView_Title -> g
    android.widget.ListView mView_ListView -> h
    android.widget.PopupMenu mOverflowPopupMenu -> i
    com.lq.adapter.ArtistAdapter mAdapter -> Y
    com.lq.activity.MainContentActivity mActivity -> Z
    java.lang.String mSortOrder -> aa
    android.content.BroadcastReceiver mExternalStorageReceiver -> ab
    void onAttach(android.app.Activity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> q
    void onStop() -> e
    void onDetach() -> c
    void initViewsSetting() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void setTitleLeftDrawable() -> b
    void startWatchingExternalStorage() -> E
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.widget.ImageView access$1(com.lq.fragment.ArtistBrowserFragment) -> a
    android.widget.TextView access$2(com.lq.fragment.ArtistBrowserFragment) -> b
    com.lq.adapter.ArtistAdapter access$3(com.lq.fragment.ArtistBrowserFragment) -> c
    com.lq.activity.MainContentActivity access$4(com.lq.fragment.ArtistBrowserFragment) -> d
    android.view.GestureDetector access$5(com.lq.fragment.ArtistBrowserFragment) -> e
    void access$6(com.lq.fragment.ArtistBrowserFragment,java.lang.String) -> a
    android.widget.PopupMenu access$7(com.lq.fragment.ArtistBrowserFragment) -> f
com.lq.fragment.ArtistBrowserFragment$1 -> com.lq.c.o:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.ArtistBrowserFragment$2 -> com.lq.c.p:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.fragment.ArtistBrowserFragment$3 -> com.lq.c.q:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.fragment.ArtistBrowserFragment$4 -> com.lq.c.r:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.fragment.ArtistBrowserFragment$5 -> com.lq.c.s:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.ArtistBrowserFragment$6 -> com.lq.c.t:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.ArtistBrowserFragment$7 -> com.lq.c.u:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.fragment.ArtistBrowserFragment$8 -> com.lq.c.v:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.ArtistBrowserFragment$9 -> com.lq.c.w:
    com.lq.fragment.ArtistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.EditTextDialogFragment -> com.lq.c.x:
    java.lang.String TAG -> Y
    android.widget.EditText mView_et_PlaylistName -> Z
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener mListener -> aa
    android.app.AlertDialog mAlertDialog -> ab
    android.content.DialogInterface$OnClickListener mPositiveClickListener -> ac
    android.content.DialogInterface$OnClickListener mNegativeClickListener -> ad
    com.lq.fragment.EditTextDialogFragment newInstance(java.lang.String,java.lang.String,java.lang.String,com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener) -> a
    void setOnPlaylistCreateListener(com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener) -> a
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onDestroy() -> s
    void setWindowShownWhenClickedButton(boolean) -> c
    void setDialogDismiss() -> E
    void setDialogStayShown() -> F
    android.widget.EditText access$0(com.lq.fragment.EditTextDialogFragment) -> a
    void access$1(com.lq.fragment.EditTextDialogFragment,boolean) -> a
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener access$2(com.lq.fragment.EditTextDialogFragment) -> b
    java.lang.String access$3() -> G
com.lq.fragment.EditTextDialogFragment$1 -> com.lq.c.y:
    com.lq.fragment.EditTextDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.EditTextDialogFragment$2 -> com.lq.c.z:
    com.lq.fragment.EditTextDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener -> com.lq.c.aa:
    void onEditTextInputCompleted(java.lang.String) -> a
com.lq.fragment.FolderBrowserFragment -> com.lq.c.ab:
    java.lang.String TAG -> a
    int FOLDER_RETRIEVE_LOADER -> b
    android.view.GestureDetector mDetector -> c
    android.widget.ImageView mView_MenuNavigation -> d
    android.widget.ImageView mView_MoreFunctions -> e
    android.widget.ImageView mView_GoToPlayer -> f
    android.widget.TextView mView_Title -> g
    android.widget.ListView mView_ListView -> h
    android.widget.PopupMenu mOverflowPopupMenu -> i
    com.lq.adapter.FolderAdapter mAdapter -> Y
    com.lq.activity.MainContentActivity mActivity -> Z
    java.lang.String mSortOrder -> aa
    android.content.BroadcastReceiver mExternalStorageReceiver -> ab
    java.util.Comparator mFolderSongCountComparator -> ac
    java.util.Comparator mFolderNameComparator -> ad
    void onAttach(android.app.Activity) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onResume() -> q
    void onStop() -> e
    void onDetach() -> c
    void initViewsSetting() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void setTitleLeftDrawable() -> b
    void startWatchingExternalStorage() -> E
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.widget.ImageView access$1(com.lq.fragment.FolderBrowserFragment) -> a
    android.widget.TextView access$2(com.lq.fragment.FolderBrowserFragment) -> b
    com.lq.adapter.FolderAdapter access$3(com.lq.fragment.FolderBrowserFragment) -> c
    com.lq.activity.MainContentActivity access$4(com.lq.fragment.FolderBrowserFragment) -> d
    android.view.GestureDetector access$5(com.lq.fragment.FolderBrowserFragment) -> e
    java.util.Comparator access$6(com.lq.fragment.FolderBrowserFragment) -> f
    java.util.Comparator access$7(com.lq.fragment.FolderBrowserFragment) -> g
    android.widget.PopupMenu access$8(com.lq.fragment.FolderBrowserFragment) -> h
com.lq.fragment.FolderBrowserFragment$1 -> com.lq.c.ac:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.FolderBrowserFragment$10 -> com.lq.c.ad:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.FolderBrowserFragment$11 -> com.lq.c.ae:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.FolderBrowserFragment$2 -> com.lq.c.af:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    int compare(com.lq.entity.FolderInfo,com.lq.entity.FolderInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.FolderBrowserFragment$3 -> com.lq.c.ag:
    char first_l -> a
    char first_r -> b
    com.lq.fragment.FolderBrowserFragment this$0 -> c
    int compare(com.lq.entity.FolderInfo,com.lq.entity.FolderInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.FolderBrowserFragment$4 -> com.lq.c.ah:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.fragment.FolderBrowserFragment$5 -> com.lq.c.ai:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.fragment.FolderBrowserFragment$6 -> com.lq.c.aj:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.fragment.FolderBrowserFragment$7 -> com.lq.c.ak:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.FolderBrowserFragment$8 -> com.lq.c.al:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.FolderBrowserFragment$9 -> com.lq.c.am:
    com.lq.fragment.FolderBrowserFragment this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.fragment.FrameAlbumFragment -> com.lq.c.an:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onSaveInstanceState(android.os.Bundle) -> e
com.lq.fragment.FrameArtistFragment -> com.lq.c.ao:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onSaveInstanceState(android.os.Bundle) -> e
com.lq.fragment.FrameFolderFragment -> com.lq.c.ap:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onSaveInstanceState(android.os.Bundle) -> e
com.lq.fragment.FrameLocalMusicFragment -> com.lq.c.aq:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onSaveInstanceState(android.os.Bundle) -> e
com.lq.fragment.FramePlaylistFragment -> com.lq.c.ar:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onSaveInstanceState(android.os.Bundle) -> e
com.lq.fragment.MenuFragment -> com.lq.c.as:
    android.widget.ListView mListView -> i
    void onActivityCreated(android.os.Bundle) -> d
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void supportMe() -> b
    void switchFragment(java.lang.String) -> a
    java.util.List getData() -> E
    java.util.List access$0(com.lq.fragment.MenuFragment) -> a
com.lq.fragment.MenuFragment$1 -> com.lq.c.at:
    com.lq.fragment.MenuFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.MenuFragment$2 -> com.lq.c.au:
    com.lq.fragment.MenuFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.MenuFragment$SectionAdapter -> com.lq.c.av:
    java.util.List dataList -> a
    com.lq.fragment.MenuFragment this$0 -> b
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void bindSectionHeader(android.view.View,int,boolean) -> a
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.String[] getSections() -> a
    java.lang.Object[] getSections() -> getSections
    java.lang.Object getItem(int) -> getItem
com.lq.fragment.MenuFragment$ViewHolder -> com.lq.c.aw:
    android.widget.TextView menu_title -> a
com.lq.fragment.PlaylistBrowserFragment -> com.lq.c.ax:
    java.lang.String TAG -> a
    java.lang.String SORT_ORDER -> b
    int SORT_ORDER_CREATED_TIME -> c
    int SORT_ORDER_MODIFIED_TIME -> d
    int PLAYLIST_RETRIEVE_LOADER -> e
    int TRACK_RETRIEVE_LOADER -> f
    int CONTEXT_MENU_RENAME -> g
    int CONTEXT_MENU_DELETE -> h
    int CONTEXT_MENU_PLAYLATER -> i
    android.view.GestureDetector mDetector -> Y
    android.widget.ImageView mView_MenuNavigation -> Z
    android.widget.ImageView mView_MoreFunctions -> aa
    android.widget.ImageView mView_GoToPlayer -> ab
    android.widget.TextView mView_Title -> ac
    android.view.View mView_CreatePlaylist -> ad
    android.widget.ListView mView_ListView -> ae
    android.widget.PopupMenu mOverflowPopupMenu -> af
    com.lq.adapter.PlaylistAdapter mAdapter -> ag
    com.lq.activity.MainContentActivity mActivity -> ah
    com.lq.fragment.EditTextDialogFragment mEditTextDialogFragment -> ai
    int mSelectedPlaylistId -> aj
    com.lq.service.MusicService$MusicPlaybackLocalBinder mMusicServiceBinder -> ak
    android.content.BroadcastReceiver mExternalStorageReceiver -> al
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener mCreateNewPlaylistListener -> am
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener mUpdatePlaylistListener -> an
    android.content.DialogInterface$OnClickListener mDeletePromptListener -> ao
    android.content.ServiceConnection mServiceConnection -> ap
    android.support.v4.app.LoaderManager$LoaderCallbacks mTracksLoaderCallbacks -> aq
    java.util.Comparator mPlaylistSongCountComparator -> ar
    java.util.Comparator mPlaylistNameComparator -> as
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> d
    void onResume() -> q
    void onStop() -> e
    void onDetach() -> c
    void onDestroy() -> s
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void initViewsSetting() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void startWatchingExternalStorage() -> b
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    android.widget.ImageView access$1(com.lq.fragment.PlaylistBrowserFragment) -> a
    android.view.View access$2(com.lq.fragment.PlaylistBrowserFragment) -> b
    android.widget.TextView access$3(com.lq.fragment.PlaylistBrowserFragment) -> c
    com.lq.adapter.PlaylistAdapter access$4(com.lq.fragment.PlaylistBrowserFragment) -> d
    com.lq.fragment.EditTextDialogFragment access$5(com.lq.fragment.PlaylistBrowserFragment) -> e
    int access$6(com.lq.fragment.PlaylistBrowserFragment) -> f
    java.lang.String access$7(com.lq.fragment.PlaylistBrowserFragment) -> g
    void access$8(com.lq.fragment.PlaylistBrowserFragment,com.lq.service.MusicService$MusicPlaybackLocalBinder) -> a
    com.lq.service.MusicService$MusicPlaybackLocalBinder access$9(com.lq.fragment.PlaylistBrowserFragment) -> h
    com.lq.activity.MainContentActivity access$10(com.lq.fragment.PlaylistBrowserFragment) -> i
    android.view.GestureDetector access$11(com.lq.fragment.PlaylistBrowserFragment) -> j
    com.lq.fragment.EditTextDialogFragment$OnMyDialogInputListener access$12(com.lq.fragment.PlaylistBrowserFragment) -> k
    void access$13(com.lq.fragment.PlaylistBrowserFragment,com.lq.fragment.EditTextDialogFragment) -> a
    android.widget.PopupMenu access$14(com.lq.fragment.PlaylistBrowserFragment) -> l
    java.util.Comparator access$15(com.lq.fragment.PlaylistBrowserFragment) -> m
    java.util.Comparator access$16(com.lq.fragment.PlaylistBrowserFragment) -> n
com.lq.fragment.PlaylistBrowserFragment$1 -> com.lq.c.ay:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.PlaylistBrowserFragment$10 -> com.lq.c.az:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.fragment.PlaylistBrowserFragment$11 -> com.lq.c.ba:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.fragment.PlaylistBrowserFragment$12 -> com.lq.c.bb:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.PlaylistBrowserFragment$13 -> com.lq.c.bc:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.PlaylistBrowserFragment$14 -> com.lq.c.bd:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.PlaylistBrowserFragment$15 -> com.lq.c.be:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.PlaylistBrowserFragment$16 -> com.lq.c.bf:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.fragment.PlaylistBrowserFragment$2 -> com.lq.c.bg:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onEditTextInputCompleted(java.lang.String) -> a
com.lq.fragment.PlaylistBrowserFragment$3 -> com.lq.c.bh:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onEditTextInputCompleted(java.lang.String) -> a
com.lq.fragment.PlaylistBrowserFragment$4 -> com.lq.c.bi:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.PlaylistBrowserFragment$5 -> com.lq.c.bj:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.lq.fragment.PlaylistBrowserFragment$6 -> com.lq.c.bk:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
com.lq.fragment.PlaylistBrowserFragment$7 -> com.lq.c.bl:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    int compare(com.lq.entity.PlaylistInfo,com.lq.entity.PlaylistInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.PlaylistBrowserFragment$8 -> com.lq.c.bm:
    char first_l -> a
    char first_r -> b
    com.lq.fragment.PlaylistBrowserFragment this$0 -> c
    int compare(com.lq.entity.PlaylistInfo,com.lq.entity.PlaylistInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.PlaylistBrowserFragment$9 -> com.lq.c.bn:
    com.lq.fragment.PlaylistBrowserFragment this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.fragment.PromptDialogFragment -> com.lq.c.bo:
    java.lang.String TAG -> aa
    com.lq.activity.MainContentActivity mMainActivity -> Y
    android.content.DialogInterface$OnClickListener mListener -> Z
    com.lq.fragment.PromptDialogFragment newInstance(java.lang.String,android.content.DialogInterface$OnClickListener) -> a
    void setOnPositiveButtonClickedListener(android.content.DialogInterface$OnClickListener) -> a
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onDestroy() -> s
com.lq.fragment.PromptDialogFragment$1 -> com.lq.c.bp:
    com.lq.fragment.PromptDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.SelectPlaylistDialogFragment -> com.lq.c.bq:
    java.lang.String TAG -> Y
    int PLAYLIST_RETRIEVE_LOADER -> Z
    android.view.ViewGroup mView_rootView -> aa
    android.view.ViewGroup mView_top -> ab
    android.view.View mView_createNewList -> ac
    android.widget.ListView mView_playlist -> ad
    com.lq.adapter.PlaylistAdapter mAdapter -> ae
    long[] mAudioId -> af
    android.content.BroadcastReceiver mExternalStorageReceiver -> ag
    com.lq.fragment.SelectPlaylistDialogFragment newInstance(long[]) -> a
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onDestroy() -> s
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void initViewsSetting() -> E
    void addTrackToPlaylist(int) -> b
    void startWatchingExternalStorage() -> F
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    com.lq.adapter.PlaylistAdapter access$1(com.lq.fragment.SelectPlaylistDialogFragment) -> a
    void access$2(com.lq.fragment.SelectPlaylistDialogFragment,int) -> a
    long[] access$3(com.lq.fragment.SelectPlaylistDialogFragment) -> b
com.lq.fragment.SelectPlaylistDialogFragment$1 -> com.lq.c.br:
    com.lq.fragment.SelectPlaylistDialogFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.SelectPlaylistDialogFragment$2 -> com.lq.c.bs:
    com.lq.fragment.SelectPlaylistDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.SelectPlaylistDialogFragment$3 -> com.lq.c.bt:
    com.lq.fragment.SelectPlaylistDialogFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.lq.fragment.SelectPlaylistDialogFragment$4 -> com.lq.c.bu:
    com.lq.fragment.SelectPlaylistDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.SettingFragment -> com.lq.c.bv:
    java.lang.String TAG -> a
    android.preference.Preference mLyricSavePathPreference -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.lq.fragment.TrackBrowserFragment -> com.lq.c.bw:
    java.lang.String TAG -> a
    int CONTEXT_MENU_ADD_TO_PLAYLIST -> b
    int CONTEXT_MENU_CHECK_DETAIL -> c
    int CONTEXT_MENU_DELETE -> d
    android.view.GestureDetector mDetector -> e
    java.lang.String mSortOrder -> f
    android.os.Bundle mCurrentPlayInfo -> g
    boolean mHasNewData -> h
    com.lq.activity.MainContentActivity mActivity -> i
    android.widget.ListView mView_ListView -> Y
    android.view.View mView_EmptyNoStorage -> Z
    android.view.View mView_EmptyNoSong -> aa
    android.view.View mView_EmptyLoading -> ab
    android.widget.ImageView mView_MenuNavigation -> ac
    android.widget.ImageView mView_GoToPlayer -> ad
    android.widget.ImageView mView_MoreFunctions -> ae
    android.widget.TextView mView_Title -> af
    android.view.View mView_PlayAll -> ag
    android.view.View mView_Search -> ah
    android.view.View mView_MutipleChoose -> ai
    android.view.View mView_SearchBar -> aj
    android.widget.EditText mView_SearchInput -> ak
    android.view.View mView_SearchCancel -> al
    android.view.View mView_TrackOperations -> am
    android.widget.ImageView mView_KeyboardSwitcher -> an
    boolean mIsT9Keyboard -> ao
    android.widget.PopupMenu mOverflowPopupMenu -> ap
    android.widget.PopupWindow mT9KeyBoardWindow -> aq
    com.lq.adapter.TrackAdapter mAdapter -> ar
    java.util.List mOriginalData -> as
    java.util.List mShowData -> at
    com.lq.entity.ArtistInfo mArtistInfo -> au
    com.lq.entity.FolderInfo mFolderInfo -> av
    com.lq.entity.PlaylistInfo mPlaylistInfo -> aw
    com.lq.entity.AlbumInfo mAlbumInfo -> ax
    com.lq.entity.TrackInfo mToDeleteTrack -> ay
    com.lq.entity.TrackInfo mPlayingTrack -> az
    android.content.SharedPreferences mSystemPreferences -> aA
    android.view.inputmethod.InputMethodManager mInputMethodManager -> aB
    com.lq.service.MusicService$MusicPlaybackLocalBinder mMusicServiceBinder -> aC
    android.content.ServiceConnection mServiceConnection -> aD
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mFilterPreferenceChangedListener -> aE
    android.view.View$OnClickListener mT9KeyClickedListener -> aF
    java.lang.String[] T9KEYS -> aG
    android.content.BroadcastReceiver mExternalStorageReceiver -> aH
    android.content.DialogInterface$OnClickListener mDeletePromptListener -> aI
    com.lq.listener.OnPlaybackStateChangeListener mOnPlaybackStateChangeListener -> aJ
    java.util.Comparator mTrackNameComparator -> aK
    java.util.Comparator mArtistNameComparator -> aL
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> d
    void onResume() -> q
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> e
    void onDetach() -> c
    void onDestroy() -> s
    void onBackKeyPressed() -> a
    void initViewsSetting() -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.util.List) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void initCurrentPlayInfo(android.os.Bundle) -> c
    void handleArguments() -> E
    void setTitleLeftDrawable() -> F
    void appendImageSpan(int,int) -> a
    void backDeleteImageSpan() -> G
    void pinyinSearch(java.lang.String) -> a
    boolean contains(java.lang.String,java.lang.String,java.lang.String) -> a
    void startWatchingExternalStorage() -> H
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String access$1(com.lq.fragment.TrackBrowserFragment) -> a
    void access$2(com.lq.fragment.TrackBrowserFragment,com.lq.service.MusicService$MusicPlaybackLocalBinder) -> a
    com.lq.service.MusicService$MusicPlaybackLocalBinder access$3(com.lq.fragment.TrackBrowserFragment) -> b
    com.lq.listener.OnPlaybackStateChangeListener access$4(com.lq.fragment.TrackBrowserFragment) -> c
    void access$5(com.lq.fragment.TrackBrowserFragment,android.os.Bundle) -> a
    android.widget.TextView access$6(com.lq.fragment.TrackBrowserFragment) -> d
    android.widget.ListView access$7(com.lq.fragment.TrackBrowserFragment) -> e
    android.view.View access$8(com.lq.fragment.TrackBrowserFragment) -> f
    com.lq.adapter.TrackAdapter access$9(com.lq.fragment.TrackBrowserFragment) -> g
    android.view.View access$10(com.lq.fragment.TrackBrowserFragment) -> h
    android.widget.ImageView access$11(com.lq.fragment.TrackBrowserFragment) -> i
    void access$12(com.lq.fragment.TrackBrowserFragment,int,int) -> a
    android.widget.PopupWindow access$13(com.lq.fragment.TrackBrowserFragment) -> j
    void access$14(com.lq.fragment.TrackBrowserFragment) -> k
    android.view.View access$15(com.lq.fragment.TrackBrowserFragment) -> l
    com.lq.entity.PlaylistInfo access$16(com.lq.fragment.TrackBrowserFragment) -> m
    com.lq.entity.TrackInfo access$17(com.lq.fragment.TrackBrowserFragment) -> n
    void access$18(com.lq.fragment.TrackBrowserFragment,com.lq.entity.TrackInfo) -> a
    com.lq.activity.MainContentActivity access$19(com.lq.fragment.TrackBrowserFragment) -> o
    android.view.GestureDetector access$20(com.lq.fragment.TrackBrowserFragment) -> p
    void access$21(com.lq.fragment.TrackBrowserFragment,java.lang.String) -> a
    android.widget.PopupMenu access$22(com.lq.fragment.TrackBrowserFragment) -> q
    boolean access$23(com.lq.fragment.TrackBrowserFragment) -> r
    com.lq.entity.ArtistInfo access$24(com.lq.fragment.TrackBrowserFragment) -> s
    com.lq.entity.FolderInfo access$25(com.lq.fragment.TrackBrowserFragment) -> t
    com.lq.entity.AlbumInfo access$26(com.lq.fragment.TrackBrowserFragment) -> u
    boolean access$27(com.lq.fragment.TrackBrowserFragment) -> v
    void access$28(com.lq.fragment.TrackBrowserFragment,boolean) -> a
    android.view.View access$29(com.lq.fragment.TrackBrowserFragment) -> w
    android.widget.ImageView access$30(com.lq.fragment.TrackBrowserFragment) -> x
    void access$31(com.lq.fragment.TrackBrowserFragment,boolean) -> b
    android.widget.EditText access$32(com.lq.fragment.TrackBrowserFragment) -> y
    android.view.inputmethod.InputMethodManager access$33(com.lq.fragment.TrackBrowserFragment) -> z
    java.util.List access$34(com.lq.fragment.TrackBrowserFragment) -> A
    void access$35(com.lq.fragment.TrackBrowserFragment,java.lang.String) -> b
    com.lq.entity.TrackInfo access$36(com.lq.fragment.TrackBrowserFragment) -> B
com.lq.fragment.TrackBrowserFragment$1 -> com.lq.c.bx:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.lq.fragment.TrackBrowserFragment$10 -> com.lq.c.by:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.lq.fragment.TrackBrowserFragment$11 -> com.lq.c.bz:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$12 -> com.lq.c.ca:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$13 -> com.lq.c.cb:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.lq.fragment.TrackBrowserFragment$14 -> com.lq.c.cc:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$15 -> com.lq.c.cd:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$16 -> com.lq.c.ce:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$17 -> com.lq.c.cf:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$18 -> com.lq.c.cg:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$19 -> com.lq.c.ch:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.lq.fragment.TrackBrowserFragment$2 -> com.lq.c.ci:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.lq.fragment.TrackBrowserFragment$20 -> com.lq.c.cj:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.lq.fragment.TrackBrowserFragment$3 -> com.lq.c.ck:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.lq.fragment.TrackBrowserFragment$4 -> com.lq.c.cl:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.fragment.TrackBrowserFragment$5 -> com.lq.c.cm:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.lq.fragment.TrackBrowserFragment$6 -> com.lq.c.cn:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    void onMusicPlayed() -> a
    void onMusicPaused() -> b
    void onMusicStopped() -> c
    void onPlayNewSong(com.lq.entity.TrackInfo) -> a
    void onPlayModeChanged(int) -> a
    void onPlayProgressUpdate(int) -> b
com.lq.fragment.TrackBrowserFragment$7 -> com.lq.c.co:
    char first_l -> a
    char first_r -> b
    com.lq.fragment.TrackBrowserFragment this$0 -> c
    int compare(com.lq.entity.TrackInfo,com.lq.entity.TrackInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.TrackBrowserFragment$8 -> com.lq.c.cp:
    char first_l -> a
    char first_r -> b
    com.lq.fragment.TrackBrowserFragment this$0 -> c
    int compare(com.lq.entity.TrackInfo,com.lq.entity.TrackInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.fragment.TrackBrowserFragment$9 -> com.lq.c.cq:
    com.lq.fragment.TrackBrowserFragment this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.lq.fragment.TrackDetailDialogFragment -> com.lq.c.cr:
    java.lang.String TAG -> Y
    android.view.ViewGroup mView_vg_rootView -> Z
    android.widget.TextView mView_tv_SongName -> aa
    android.widget.TextView mView_tv_SongDuration -> ab
    android.widget.TextView mView_tv_Artist -> ac
    android.widget.TextView mView_tv_FileSize -> ad
    android.widget.TextView mView_tv_FilePath -> ae
    com.lq.fragment.TrackDetailDialogFragment newInstance(com.lq.entity.TrackInfo) -> a
    void onCreate(android.os.Bundle) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void findViews() -> E
    void setContentFromArgment() -> F
com.lq.listener.OnPlaybackStateChangeListener -> com.lq.d.a:
    void onMusicPlayed() -> a
    void onMusicPaused() -> b
    void onMusicStopped() -> c
    void onPlayNewSong(com.lq.entity.TrackInfo) -> a
    void onPlayModeChanged(int) -> a
    void onPlayProgressUpdate(int) -> b
com.lq.loader.AlbumInfoRetrieveLoader -> com.lq.e.a:
    java.lang.String TAG -> m
    java.lang.String[] mProjection -> n
    java.lang.String mSelection -> o
    java.lang.String[] mSelectionArgs -> p
    java.lang.String mSortOrder -> q
    android.content.ContentResolver mContentResolver -> r
    java.util.List mArtistInfoList -> s
    java.util.List loadInBackground() -> s
    void deliverResult(java.util.List) -> a
    void onReleaseResources(java.util.List) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onCanceled(java.util.List) -> c
    void onReset() -> r
    void onForceLoad() -> a
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
com.lq.loader.ArtistInfoRetrieveLoader -> com.lq.e.b:
    java.lang.String TAG -> m
    java.lang.String[] mProjection -> n
    java.lang.String mSelection -> o
    java.lang.String[] mSelectionArgs -> p
    java.lang.String mSortOrder -> q
    android.content.ContentResolver mContentResolver -> r
    java.util.List mArtistInfoList -> s
    java.util.List loadInBackground() -> s
    void deliverResult(java.util.List) -> a
    void onReleaseResources(java.util.List) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onCanceled(java.util.List) -> c
    void onReset() -> r
    void onForceLoad() -> a
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
com.lq.loader.FolderInfoRetreiveLoader -> com.lq.e.c:
    java.lang.String TAG -> m
    android.content.ContentResolver mContentResolver -> n
    java.util.List mArtistInfoList -> o
    java.lang.String num_of_songs -> p
    java.lang.String[] mProjection -> q
    java.lang.StringBuilder mSelection -> r
    java.lang.String[] mSelectionArgs -> s
    java.lang.String mSortOrder -> t
    java.util.List loadInBackground() -> s
    void deliverResult(java.util.List) -> a
    void onReleaseResources(java.util.List) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onCanceled(java.util.List) -> c
    void onReset() -> r
    void onForceLoad() -> a
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
com.lq.loader.MusicRetrieveLoader -> com.lq.e.d:
    java.lang.String TAG -> u
    java.lang.String[] mProjection -> v
    java.lang.String mSelection -> w
    java.lang.String[] mSelectionArgs -> x
    java.lang.String mSortOrder -> y
    android.content.ContentResolver mContentResolver -> z
    java.util.List mMusicItemList -> A
    java.util.regex.Pattern mFolerPattern -> B
    int index_id -> m
    int index_title -> n
    int index_data -> o
    int index_artist -> p
    int index_album -> q
    int index_duration -> r
    int index_size -> s
    int index_displayname -> t
    java.util.List loadInBackground() -> s
    void deliverResult(java.util.List) -> a
    void onReleaseResources(java.util.List) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onCanceled(java.util.List) -> c
    void onReset() -> r
    void onForceLoad() -> a
    com.lq.entity.TrackInfo createNewItem(android.database.Cursor) -> a
    void setFolderFilterPattern(java.lang.String) -> a
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
com.lq.loader.PlaylistInfoRetrieveLoader -> com.lq.e.e:
    java.lang.String TAG -> m
    java.lang.String[] mProjection -> n
    java.lang.String mSelection -> o
    java.lang.String[] mSelectionArgs -> p
    java.lang.String mSortOrder -> q
    android.content.ContentResolver mContentResolver -> r
    java.util.List mPlaylistInfoList -> s
    java.util.List loadInBackground() -> s
    void deliverResult(java.util.List) -> a
    void onReleaseResources(java.util.List) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onCanceled(java.util.List) -> c
    void onReset() -> r
    void onForceLoad() -> a
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
com.lq.receiver.AudioBecomingNoisyReceiver -> com.lq.receiver.AudioBecomingNoisyReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.receiver.MediaButtonReceiver -> com.lq.receiver.MediaButtonReceiver:
    java.lang.String TAG -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.service.MusicService -> com.lq.service.MusicService:
    java.lang.String TAG -> a
    int mState -> b
    int mPlayMode -> c
    java.util.ArrayList mOnPlaybackStateChangeListeners -> d
    com.lq.service.MusicService$MusicPlaybackLocalBinder mBinder -> e
    com.lq.util.LyricLoadHelper$LyricListener mLyricListener -> f
    java.util.ArrayList mPlayList -> g
    android.media.MediaPlayer mMediaPlayer -> h
    com.lq.util.AudioFocusHelper mAudioFocusHelper -> i
    java.util.LinkedList mPlayQueue -> j
    boolean mHasPlayList -> k
    boolean mHasLyric -> l
    com.lq.entity.TrackInfo mPlayingSong -> m
    int mPlayingSongPos -> n
    int mRequestPlayPos -> o
    long mRequsetPlayId -> p
    boolean mIsStreaming -> q
    android.net.wifi.WifiManager$WifiLock mWifiLock -> r
    int NOTIFICATION_ID -> s
    android.media.AudioManager mAudioManager -> t
    android.app.NotificationManager mNotificationManager -> u
    android.app.Notification mNotification -> v
    android.content.ComponentName mAudioBecomingNoisyReceiverName -> w
    java.util.Random mRandom -> x
    com.lq.util.LyricLoadHelper mLyricLoadHelper -> y
    com.lq.util.LyricDownloadManager mLyricDownloadManager -> z
    com.lq.service.MusicService$ServiceIncomingHandler mServiceHandler -> A
    android.content.BroadcastReceiver mExternalStorageReceiver -> B
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onGainedAudioFocus() -> a
    void onLostAudioFocus() -> b
    void createMediaPlayerIfNeeded() -> c
    void processPlayRequest() -> d
    void processPauseRequest() -> e
    void processPreviousRequest(boolean) -> a
    void processNextRequest(boolean) -> b
    void processStopRequest() -> f
    void processStopRequest(boolean) -> c
    void relaxResources(boolean) -> d
    void configAndStartMediaPlayer() -> g
    void playSong() -> h
    void updateNotification(java.lang.String) -> a
    void setUpAsForeground(java.lang.String) -> b
    int seekPosInListById(java.util.List,long) -> a
    void onLyricLoaded(java.util.List,int) -> a
    void onLyricSentenceChanged(int) -> a
    void loadLyric(java.lang.String) -> c
    void startWatchingExternalStorage() -> i
    int access$0(com.lq.service.MusicService) -> a
    void access$1(com.lq.service.MusicService,boolean) -> a
    com.lq.service.MusicService$MusicPlaybackLocalBinder access$2(com.lq.service.MusicService) -> b
    java.util.ArrayList access$3(com.lq.service.MusicService) -> c
    void access$4(com.lq.service.MusicService,com.lq.util.LyricLoadHelper$LyricListener) -> a
    android.media.MediaPlayer access$5(com.lq.service.MusicService) -> d
    int access$6(com.lq.service.MusicService) -> e
    void access$7(com.lq.service.MusicService,int) -> a
    java.util.ArrayList access$8(com.lq.service.MusicService) -> f
    void access$9(com.lq.service.MusicService,boolean) -> b
    void access$10(com.lq.service.MusicService,int) -> b
    void access$11(com.lq.service.MusicService,long) -> a
    void access$12(com.lq.service.MusicService) -> g
    com.lq.entity.TrackInfo access$13(com.lq.service.MusicService) -> h
    int access$14(com.lq.service.MusicService) -> i
    void access$15(com.lq.service.MusicService,java.lang.String) -> a
    com.lq.util.LyricLoadHelper access$16(com.lq.service.MusicService) -> j
    boolean access$17(com.lq.service.MusicService) -> k
    void access$18(com.lq.service.MusicService,int) -> c
    void access$19(com.lq.service.MusicService) -> l
    java.util.LinkedList access$20(com.lq.service.MusicService) -> m
    int access$21(com.lq.service.MusicService) -> n
    boolean access$22(com.lq.service.MusicService) -> o
    com.lq.service.MusicService$ServiceIncomingHandler access$23(com.lq.service.MusicService) -> p
    com.lq.util.LyricLoadHelper$LyricListener access$24(com.lq.service.MusicService) -> q
    com.lq.util.LyricDownloadManager access$25(com.lq.service.MusicService) -> r
    void access$26(com.lq.service.MusicService,boolean) -> c
com.lq.service.MusicService$1 -> com.lq.service.a:
    com.lq.service.MusicService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.lq.service.MusicService$LyricDownloadAsyncTask -> com.lq.service.b:
    com.lq.service.MusicService this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lq.service.MusicService$MusicPlaybackLocalBinder -> com.lq.service.c:
    com.lq.service.MusicService this$0 -> a
    void registerOnPlaybackStateChangeListener(com.lq.listener.OnPlaybackStateChangeListener) -> a
    void unregisterOnPlaybackStateChangeListener(com.lq.listener.OnPlaybackStateChangeListener) -> b
    void registerLyricListener(com.lq.util.LyricLoadHelper$LyricListener) -> a
    void unRegisterLyricListener() -> a
    void seekToSpecifiedPosition(int) -> a
    void changePlayMode() -> b
    void setCurrentPlayList(java.util.List) -> a
    void appendToCurrentPlayList(java.util.List) -> b
    android.os.Bundle getCurrentPlayInfo() -> c
    void requestLoadLyric() -> d
    void removeSongFromCurrenPlaylist(long) -> a
com.lq.service.MusicService$ServiceIncomingHandler -> com.lq.service.d:
    java.lang.ref.WeakReference mServiceWeakReference -> a
    com.lq.service.MusicService mService -> b
    void handleMessage(android.os.Message) -> handleMessage
com.lq.util.AudioFocusHelper -> com.lq.f.a:
    android.media.AudioManager mAM -> a
    com.lq.util.AudioFocusHelper$MusicFocusable mFocusable -> b
    int mAudioFocus -> c
    boolean requestFocus() -> a
    boolean abandonFocus() -> b
    void giveUpAudioFocus() -> c
    void tryToGetAudioFocus() -> d
    void onAudioFocusChange(int) -> onAudioFocusChange
    int getAudioFocus() -> e
com.lq.util.AudioFocusHelper$MusicFocusable -> com.lq.f.b:
    void onGainedAudioFocus() -> a
    void onLostAudioFocus() -> b
com.lq.util.Constant -> com.lq.f.c:
    java.lang.String SDCARD_ROOT_PATH -> a
    java.lang.String LYRIC_SAVE_FOLDER_PATH -> b
com.lq.util.LyricDownloadManager -> com.lq.f.d:
    java.lang.String TAG -> a
    int mTimeOut -> b
    com.lq.util.LyricXMLParser mLyricXMLParser -> c
    java.net.URL mUrl -> d
    int mDownloadLyricId -> e
    android.content.Context mContext -> f
    java.lang.String searchLyricFromWeb(java.lang.String,java.lang.String) -> a
    java.lang.String fetchLyricContent(java.lang.String,java.lang.String) -> b
    void saveLyric(java.lang.String,java.lang.String) -> c
com.lq.util.LyricLoadHelper -> com.lq.f.e:
    java.lang.String TAG -> a
    java.util.ArrayList mLyricSentences -> b
    com.lq.util.LyricLoadHelper$LyricListener mLyricListener -> c
    boolean mHasLyric -> d
    int mIndexOfCurrentSentence -> e
    java.util.regex.Pattern mBracketPattern -> f
    java.util.regex.Pattern mTimePattern -> g
    java.lang.String mEncoding -> h
    void setLyricListener(com.lq.util.LyricLoadHelper$LyricListener) -> a
    void setIndexOfCurrentSentence(int) -> a
    boolean loadLyric(java.lang.String) -> a
    void notifyTime(long) -> a
    int seekSentenceIndex(long) -> b
    void parseLine(java.lang.String) -> b
    java.lang.String trimBracket(java.lang.String) -> c
    long parseTime(java.lang.String) -> d
com.lq.util.LyricLoadHelper$1 -> com.lq.f.f:
    com.lq.util.LyricLoadHelper this$0 -> a
    int compare(com.lq.entity.LyricSentence,com.lq.entity.LyricSentence) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.lq.util.LyricLoadHelper$LyricListener -> com.lq.f.g:
    void onLyricLoaded(java.util.List,int) -> a
    void onLyricSentenceChanged(int) -> a
com.lq.util.LyricXMLParser -> com.lq.f.h:
    java.lang.String ELEMENT_COUNT -> a
    java.lang.String ELEMENT_LRCID -> b
    int parseLyricId(java.io.InputStream) -> a
com.lq.util.LyricXMLParser$MyHandler -> com.lq.f.i:
    int mSongCount -> b
    java.util.ArrayList mLyricIds -> c
    java.lang.StringBuilder mStringBuilder -> d
    com.lq.util.LyricXMLParser this$0 -> a
    int getFirstLyricId() -> a
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.lq.util.StringHelper -> com.lq.f.j:
    com.lq.util.StringHelper$CharType checkType(char) -> a
    char getPinyinFirstLetter(char) -> b
    java.lang.String bytesToMB(long) -> a
    java.lang.String getPingYin(java.lang.String) -> a
com.lq.util.StringHelper$CharType -> com.lq.f.k:
    com.lq.util.StringHelper$CharType DELIMITER -> a
    com.lq.util.StringHelper$CharType NUM -> b
    com.lq.util.StringHelper$CharType LETTER -> c
    com.lq.util.StringHelper$CharType OTHER -> d
    com.lq.util.StringHelper$CharType CHINESE -> e
    com.lq.util.StringHelper$CharType[] ENUM$VALUES -> f
    com.lq.util.StringHelper$CharType[] values() -> values
    com.lq.util.StringHelper$CharType valueOf(java.lang.String) -> valueOf
com.lq.util.TimeHelper -> com.lq.f.l:
    java.lang.String milliSecondsToFormatTimeString(long) -> a
com.lq.xpressmusic.R -> com.lq.g.a:
com.lq.xpressmusic.R$styleable -> com.lq.g.b:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.a:
    android.view.animation.Interpolator sInterpolator -> e
    android.view.View mContent -> f
    int mCurItem -> g
    android.widget.Scroller mScroller -> h
    boolean mScrollingCacheEnabled -> i
    boolean mScrolling -> j
    boolean mIsBeingDragged -> k
    boolean mIsUnableToDrag -> l
    int mTouchSlop -> m
    float mInitialMotionX -> n
    float mLastMotionX -> o
    float mLastMotionY -> p
    int mActivePointerId -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mMinimumVelocity -> q
    int mMaximumVelocity -> c
    int mFlingDistance -> r
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> s
    boolean mEnabled -> t
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> u
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> v
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> w
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> x
    java.util.List mIgnoredViews -> y
    int mTouchMode -> d
    boolean mQuickReturn -> z
    float mScrollX -> A
    void initCustomViewAbove() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX(int) -> a
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> b
    boolean isInIgnoredView(android.view.MotionEvent) -> a
    int getBehindWidth() -> getBehindWidth
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> e
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> b
    boolean thisSlideAllowed(float) -> b
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> c
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void startDrag() -> f
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> b
    boolean pageLeft() -> c
    boolean pageRight() -> d
    com.slidingmenu.lib.CustomViewBehind access$0(com.slidingmenu.lib.CustomViewAbove) -> a
com.slidingmenu.lib.CustomViewAbove$1 -> com.slidingmenu.lib.b:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> com.slidingmenu.lib.c:
    com.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.slidingmenu.lib.d:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.slidingmenu.lib.e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.f:
    int mTouchMode -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    android.graphics.Paint mFadePaint -> k
    float mScrollScale -> l
    android.graphics.drawable.Drawable mShadowDrawable -> m
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> n
    int mShadowWidth -> o
    float mFadeDegree -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> d
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void attachToActivity(android.app.Activity,int,boolean) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> a
    void showMenu(boolean) -> a
    void showContent() -> b
    void showContent(boolean) -> b
    void toggle() -> c
    void toggle(boolean) -> c
    boolean isMenuShowing() -> d
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.slidingmenu.lib.SlidingMenu) -> a
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.slidingmenu.lib.SlidingMenu) -> b
com.slidingmenu.lib.SlidingMenu$1 -> com.slidingmenu.lib.g:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.SlidingMenu$2 -> com.slidingmenu.lib.h:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.slidingmenu.lib.i:
    void transformCanvas(android.graphics.Canvas,float) -> a
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.slidingmenu.lib.j:
    void onClose() -> a
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.slidingmenu.lib.k:
    void onClosed() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.slidingmenu.lib.l:
    void onOpen() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.slidingmenu.lib.m:
    void onOpened() -> a
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.slidingmenu.lib.n:
    com.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> a
    com.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.umeng.analytics.MobclickAgent -> com.umeng.a.a:
    com.umeng.analytics.b a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void openActivityDurationTrack(boolean) -> a
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onError(android.content.Context) -> c
    void updateOnlineConfig(android.content.Context) -> d
com.umeng.analytics.a -> com.umeng.a.b:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.umeng.analytics.i b -> b
    android.content.Context c -> c
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.i) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
com.umeng.analytics.a.a -> com.umeng.a.a.a:
    java.util.HashMap a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.b -> com.umeng.a.a.b:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.b) -> a
com.umeng.analytics.a.c -> com.umeng.a.a.c:
    com.umeng.analytics.a.b a -> a
com.umeng.analytics.a.d -> com.umeng.a.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.e -> com.umeng.a.a.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String k -> j
    java.lang.String l -> k
    java.lang.String m -> l
    java.lang.String n -> m
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.f -> com.umeng.a.a.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    long p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    int y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    void j(org.json.JSONObject) -> a
    void k(org.json.JSONObject) -> c
    void l(org.json.JSONObject) -> d
    void m(org.json.JSONObject) -> e
    void n(org.json.JSONObject) -> f
    void o(org.json.JSONObject) -> g
    void p(org.json.JSONObject) -> h
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
    boolean b() -> b
com.umeng.analytics.a.g -> com.umeng.a.a.g:
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.h -> com.umeng.a.a.h:
    com.umeng.analytics.a.o a -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.i -> com.umeng.a.a.i:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.e) -> a
    void a(com.umeng.analytics.a.b) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.i) -> a
    void b(java.util.ArrayList) -> b
    int b() -> b
    void c() -> c
com.umeng.analytics.a.j -> com.umeng.a.a.j:
    com.umeng.analytics.a.i a -> a
com.umeng.analytics.a.k -> com.umeng.a.a.k:
    java.lang.String a -> a
    int b -> b
com.umeng.analytics.a.l -> com.umeng.a.a.l:
    java.lang.String e -> e
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.m -> com.umeng.a.a.m:
    com.umeng.analytics.a.o a -> a
    com.umeng.analytics.a.p b -> b
    long c -> c
    java.util.ArrayList d -> d
    com.umeng.analytics.a.m a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String[] b(android.content.SharedPreferences) -> b
    java.util.ArrayList c(android.content.SharedPreferences) -> c
    long d(android.content.SharedPreferences) -> d
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.lang.String,long,long) -> a
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.util.ArrayList,long,long) -> a
    boolean a() -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.n -> com.umeng.a.a.n:
    java.lang.String g -> f
    java.lang.String h -> g
    java.lang.String i -> h
    java.lang.String j -> i
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.o -> com.umeng.a.a.o:
    double a -> a
    double b -> b
    long c -> c
    com.umeng.analytics.a.o a(android.content.Context) -> a
    com.umeng.analytics.a.o b(android.content.Context) -> b
    android.content.SharedPreferences$Editor a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.location.Location,android.content.SharedPreferences) -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    boolean a() -> a
com.umeng.analytics.a.p -> com.umeng.a.a.p:
    long a -> a
    long b -> b
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    com.umeng.analytics.a.p a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
com.umeng.analytics.b -> com.umeng.a.c:
    java.util.concurrent.ExecutorService a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    long t -> t
    int u -> u
    int v -> v
    java.util.Stack w -> w
    java.util.ArrayList x -> x
    void b(java.lang.String) -> a
    void a(android.content.Context) -> a
    void h(android.content.Context) -> e
    void b(android.content.Context) -> b
    void i(android.content.Context) -> f
    void j(android.content.Context) -> g
    void a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context,android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(android.content.Context,android.content.SharedPreferences) -> c
    void b(android.content.Context,java.lang.Throwable) -> a
    void a(com.umeng.analytics.b,android.content.Context) -> a
    void b(com.umeng.analytics.b,android.content.Context) -> b
com.umeng.analytics.b$a -> com.umeng.a.d:
    java.lang.Object b -> b
    android.content.Context c -> c
    int d -> d
    com.umeng.analytics.b a -> a
    void run() -> run
com.umeng.analytics.c -> com.umeng.a.e:
    com.umeng.analytics.a.i a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    int d -> d
    int a() -> a
    boolean b() -> b
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    org.json.JSONObject d() -> d
    void e() -> e
com.umeng.analytics.d -> com.umeng.a.f:
    com.umeng.analytics.a a -> a
    java.lang.Object b -> b
    android.os.Handler c -> c
    com.umeng.analytics.c d -> d
    com.umeng.analytics.a.f e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    long p -> p
    long q -> q
    long r -> r
    java.lang.String k -> k
    java.lang.String l -> l
    boolean s -> s
    void a(android.content.Context,int) -> a
    void a(android.content.Context) -> a
    void f(android.content.Context) -> c
    void b(android.content.Context) -> b
    boolean b(android.content.Context,int) -> b
    java.lang.String c(android.content.Context) -> e
    void d(android.content.Context) -> f
    org.json.JSONObject g(android.content.Context) -> d
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(int,long) -> a
    java.lang.Object a(com.umeng.analytics.d) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
com.umeng.analytics.d$a -> com.umeng.a.g:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.d$b -> com.umeng.a.h:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.e -> com.umeng.a.i:
    com.umeng.analytics.d a -> a
com.umeng.analytics.f -> com.umeng.a.j:
    java.lang.String a -> a
    long b -> b
com.umeng.analytics.g -> com.umeng.a.k:
    long d -> a
    long g -> b
    int h -> c
    boolean i -> d
    boolean j -> e
    boolean k -> f
    boolean l -> g
    boolean m -> h
    java.lang.Object p -> i
    java.lang.String[] r -> j
    java.lang.String[] s -> k
    boolean t -> l
com.umeng.analytics.h -> com.umeng.a.l:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.umeng.analytics.i -> com.umeng.a.m:
    void b(android.content.Context,java.lang.Throwable) -> a
com.umeng.analytics.j -> com.umeng.a.n:
    long a -> a
    long b -> b
    android.content.SharedPreferences b(android.content.Context) -> a
    android.content.SharedPreferences c(android.content.Context) -> b
    android.content.SharedPreferences e(android.content.Context) -> c
    java.lang.String f(android.content.Context) -> d
    java.lang.String g(android.content.Context) -> e
    int[] i(android.content.Context) -> f
    boolean a(java.io.File) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,com.umeng.analytics.a.g,java.lang.String) -> a
    void b(android.content.Context,org.json.JSONObject,java.lang.String) -> b
    void j(android.content.Context) -> g
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.a.b.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> com.umeng.a.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener f -> f
    com.umeng.analytics.onlineconfig.c g -> g
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    org.json.JSONObject d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.a.b.c:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.a.b.d:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean shouldCompressData() -> a
    void a() -> b
com.umeng.analytics.onlineconfig.b -> com.umeng.a.b.e:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.a.b.f:
    void a(int,long) -> a
com.umeng.common.Log -> com.umeng.b.a:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
com.umeng.common.b -> com.umeng.b.b:
    java.lang.String a -> a
    java.lang.String d(android.content.Context) -> a
    java.lang.String e(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String g(android.content.Context) -> c
    java.lang.String h(android.content.Context) -> d
    java.lang.String[] k(android.content.Context) -> e
    boolean l(android.content.Context) -> f
    android.location.Location m(android.content.Context) -> g
    boolean n(android.content.Context) -> h
    int o(android.content.Context) -> i
    java.lang.String[] p(android.content.Context) -> j
    java.util.Locale y(android.content.Context) -> q
    java.lang.String q(android.content.Context) -> k
    java.lang.String r(android.content.Context) -> l
    java.lang.String s(android.content.Context) -> m
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> n
    java.lang.String a(java.util.Date) -> a
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
com.umeng.common.net.r -> com.umeng.b.a.a:
    java.lang.String a -> a
    java.util.Map b -> b
    com.umeng.common.net.t execute(com.umeng.common.net.s,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean shouldCompressData() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams a() -> b
    void b(java.lang.String) -> b
com.umeng.common.net.s -> com.umeng.b.a.b:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
com.umeng.common.net.t -> com.umeng.b.a.c:
com.umeng.common.util.f -> com.umeng.b.b.a:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
com.umeng.common.util.g -> com.umeng.b.b.b:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
com.umeng.newxp.view.aW -> com.umeng.newxp.view.aW:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    int e -> e
    android.os.Parcelable$Creator f -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.umeng.newxp.view.aX -> com.umeng.newxp.view.a:
    com.umeng.newxp.view.aW a(android.os.Parcel) -> a
    com.umeng.newxp.view.aW[] a(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
net.sourceforge.pinyin4j.ChineseToPinyinResource -> a.a.a.a:
    java.util.Properties unicodeToHanyuPinyinTable -> a
    void setUnicodeToHanyuPinyinTable(java.util.Properties) -> a
    java.util.Properties getUnicodeToHanyuPinyinTable() -> b
    void initializeResource() -> c
    java.lang.String[] getHanyuPinyinStringArray(char) -> a
    boolean isValidRecord(java.lang.String) -> a
    java.lang.String getHanyuPinyinRecordFromChar(char) -> b
    net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance() -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource$1 -> a.a.a.b:
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> a.a.a.c:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> a
net.sourceforge.pinyin4j.PinyinFormatter -> a.a.a.d:
    java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String convertToneNumber2ToneMark(java.lang.String) -> a
net.sourceforge.pinyin4j.PinyinHelper -> a.a.a.e:
    java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> b
    java.lang.String[] getUnformattedHanyuPinyinStringArray(char) -> a
net.sourceforge.pinyin4j.ResourceHelper -> a.a.a.f:
    java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper -> a
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
net.sourceforge.pinyin4j.format.HanyuPinyinCaseType -> a.a.a.a.a:
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType UPPERCASE -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType LOWERCASE -> b
    java.lang.String name -> c
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat -> a.a.a.a.b:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType vCharType -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType caseType -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType toneType -> c
    void restoreDefault() -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType getCaseType() -> b
    void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType getToneType() -> c
    void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType getVCharType() -> d
    void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinToneType -> a.a.a.a.c:
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_NUMBER -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITHOUT_TONE -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_MARK -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinVCharType -> a.a.a.a.d:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_AND_COLON -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_V -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_UNICODE -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination -> a.a.a.a.a.a:
